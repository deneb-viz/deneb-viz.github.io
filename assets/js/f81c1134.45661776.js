"use strict";(self.webpackChunkdeneb_doc=self.webpackChunkdeneb_doc||[]).push([["5524"],{5865:function(e){e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"1-8-release","metadata":{"permalink":"/blog/1-8-release","source":"@site/blog/2025-07-17-certification-1-8.md","title":"Deneb 1.8 Released","description":"Deneb 1.8 has passed AppSource certification checks and is pending deployment to your reports","date":"2025-07-17T00:00:00.000Z","tags":[{"inline":true,"label":"releases","permalink":"/blog/tags/releases"},{"inline":true,"label":"certification","permalink":"/blog/tags/certification"},{"inline":true,"label":"production","permalink":"/blog/tags/production"}],"readingTime":3.29,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb 1.8 Released","description":"Deneb 1.8 has passed AppSource certification checks and is pending deployment to your reports","slug":"1-8-release","authors":["daniel"],"tags":["releases","certification","production"],"image":"/img/blog/blog-header-release-1-8.png","hide_table_of_contents":false},"unlisted":false,"nextItem":{"title":"New AppSource Sample Workbook","permalink":"/blog/sample-workbook-update"}},"content":"Version 1.8 is a maintenance update, which brings Deneb up to the latest Microsoft APIs and certification standards and updates the current Vega and Vega-Lite runtimes. It also prepares the v1 codebase for the end of feature development and long-term service continuity, while addressing several minor but long-standing bugs.\\n\\n\x3c!-- truncate --\x3e\\n\\nYou can view all changes and their associated details starting with the [Change Log](/docs/changelog). And as always, this has also been made available for users of the standalone (non-AppSource) version, so you can [download it from GitHub](https://github.com/deneb-viz/deneb/releases/latest).\\n\\nAgain, I\'m extremely grateful to our community, especially those who volunteer to help test the builds before we submit them to AppSource for everyone else to use. Deneb has become a little more than one person can completely handle in their free time, so any and all assistance from these folks is essential to keep our quality and stability as high as possible as we evolve. I hope that you appreciate and value their contributions as much as I do!\\n\\n### Readiness for v2 and the Future of v1\\n\\nI\'ve mentioned this in a previous post, but to provide a more recent update, I\'m spending a lot of my time and effort working on Deneb v2. This is a significant shift in terms of architecture, will form the basis of all future features and as such replace v1 as the dominant version of Deneb in the future. It is a complete rewrite following the lessons learned from the development of v1, as well as learning from the feedback and suggestions of our community.\\n\\nThis includes a huge look at the template definition format and underlying visual property structure that we use for configuration and persistence inside Power BI workbooks: as we now have tooling like PBIR, which better structures the report layer and also exposes the internal configuration for a visual instance. As such, there is too much complexity and ambiguity with the current v1 implementation if you are approaching this from a programmatic perspective.\\n\\nThis structure is being redesigned and streamlined, which will make it easier to work with if you have ideas for the potential automation of visual configuration, or if you want to potentially build your own tools to work with Deneb. It is also designed to be more modular, extensible and maintainable, which will allow us to add new features and improvements more rapidly in the future.\\n\\n**As such, the v2 visual will be a brand new product, and AppSource listing. It will remain free and open-source.**\\n\\nBecause Power BI reports are intended to be stable for users once delivered, it\'s important to me that we take a similar approach for Deneb where v1 is concerned and I don\'t want to either introduce a potentially breaking change to existing reports if we attempt to update the visual in-place through the standard AppSource update process, or just remove the v1 visual from AppSource and leave existing reports with no visual at all.\\n\\nTherefore, the plan for v1 is to continue to provide critical bug fixes, Vega language updates (providing they remain compatible with the v1 architecture) and Power BI visual API compatibility, to comply with certification requirements. However, no new features will be added to the v1 codebase unless there is a significant justification to do so.\\n\\nBecause Deneb development is done in my free time, I\'m always \\"a couple of months away\\" from having something tangible to show you, and it may feel like the wheels are spinning a bit, but a lot is happening: in the last 8 months, more commits have gone into the v2 codebase than have gone into the entirety of v1 since its inception nearly five years ago. There will be more news soon, but I wanted to provide this update to keep you up to date with how things are progressing.\\n\\n---\\n\\nThanks as always,\\n\\nDM-P"},{"id":"sample-workbook-update","metadata":{"permalink":"/blog/sample-workbook-update","source":"@site/blog/2025-05-08-sample-workbook-update.mdx","title":"New AppSource Sample Workbook","description":"The sample workbook that is available with Deneb\'s AppSource listing has received a huge update, to additionally focus on learning Vega-Lite concepts.","date":"2025-05-08T00:00:00.000Z","tags":[{"inline":true,"label":"samples","permalink":"/blog/tags/samples"},{"inline":true,"label":"getting-started","permalink":"/blog/tags/getting-started"},{"inline":true,"label":"vega-lite","permalink":"/blog/tags/vega-lite"}],"readingTime":2.91,"hasTruncateMarker":true,"authors":[{"name":"Imran Haq","title":"Community Contributor","url":"https://pbi-datavizzle.github.io/","imageURL":"/img/support/community-expert-imran-haq.png","key":"imran","page":null}],"frontMatter":{"title":"New AppSource Sample Workbook","description":"The sample workbook that is available with Deneb\'s AppSource listing has received a huge update, to additionally focus on learning Vega-Lite concepts.","slug":"sample-workbook-update","authors":["imran"],"tags":["samples","getting-started","vega-lite"],"image":"/img/blog/2025-05-08-sample-workbook/blog-header-sample-workbook.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Deneb 1.8 Released","permalink":"/blog/1-8-release"},"nextItem":{"title":"How-To: The Stacked Bar Alternative","permalink":"/blog/stacked-bar-alternative"}},"content":"import { SlideShow } from \\"../src/components/SlideShow\\";\\r\\n\\r\\nWe\'re excited to introduce a brand-new sample workbook designed to help you get started with Deneb and Vega-Lite for Power BI. Inside, you\'ll find practical learning materials, a selection official Vega datasets, and various chart types to help you dive straight into the world of Deneb and the powerful grammar of graphics behind Vega and Vega-Lite.\\r\\n\\r\\n{/* truncate */}\\r\\n\\r\\n:::tip Where to download\\r\\nThe sample workbook can be downloaded from [Deneb\'s page in AppSource](https://appsource.microsoft.com/en-us/product/power-bi-visuals/coacervolimited1596856650797.deneb) or from the listing in Power BI Desktop.\\r\\n:::\\r\\n\\r\\nWhether you\'re just starting out or looking to explore new data visualization possibilities, this workbook was created with you in mind\u2014especially if you\'re new to Deneb or the Vega languages. We\'ve included a collection of official Vega datasets and a mix of chart examples so you can begin experimenting and building your own custom visuals in Power BI right away.\\r\\n\\r\\n<SlideShow\\r\\n  images={[\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-001.png\\",\\r\\n      alt: \\"Page 1: Intro\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-002.png\\",\\r\\n      alt: \\"Page 2: Selected Examples\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-003.png\\",\\r\\n      alt: \\"Page 3: Getting Started\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-004.png\\",\\r\\n      alt: \\"Page 4: Dataset\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-005.png\\",\\r\\n      alt: \\"Page 5: Import Practice Datasets\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-006.png\\",\\r\\n      alt: \\"Page 6: Multi-Layered Charts\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-007.png\\",\\r\\n      alt: \\"Page 7: Conditional Formatting\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-008.png\\",\\r\\n      alt: \\"Page 8: Concat & Facet\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-009.png\\",\\r\\n      alt: \\"Page 9: Number Formatting\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-010.png\\",\\r\\n      alt: \\"Page 10: Combining DAX\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-011.png\\",\\r\\n      alt: \\"Page 11: Patterns\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-012.png\\",\\r\\n      alt: \\"Page 12: Color Schemes\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-013.png\\",\\r\\n      alt: \\"Page 13: Color Themes\\",\\r\\n    },\\r\\n    {\\r\\n      src: \\"/img/blog/2025-05-08-sample-workbook/page-014.png\\",\\r\\n      alt: \\"Page 10: Acknowledgements\\",\\r\\n    },\\r\\n  ]}\\r\\n/>\\r\\n<br />\\r\\n\\r\\nThis project was inspired by my own learning journey. Coming into Power BI without a technical or data-specific background, I initially found it challenging to work with new languages like Vega-Lite. I understood the types of visuals I wanted to create, but I didn\u2019t yet have the foundational knowledge to bring those ideas to life. After much studying and hands-on practice, I can now say with confidence that creating visualizations with Vega-Lite in Deneb feels just as natural and intuitive as building native Power BI visuals.\\r\\n\\r\\nThis workbook is a way of giving back to the community that helped me grow and develop my skills. It is not only a celebration of learning and discovery, but also a celebration of all data enthusiasts, and the art of data visualization. The combination of Deneb, Vega/Vega-Lite and Power BI enable us to expand our visualization vocabulary, and to think beyond the pre-built confinements. It opens up an exciting space for data storytelling and exploration, where our only limitation is our imagination.\\r\\n\\r\\nWe hope you find this resource helpful and that you enjoy it as much as we did creating it. Enjoy!"},{"id":"stacked-bar-alternative","metadata":{"permalink":"/blog/stacked-bar-alternative","source":"@site/blog/2025-04-08-stacked-bar-alternative.mdx","title":"How-To: The Stacked Bar Alternative","description":"Using Vega-Lite to replicate a more readable alternative to a stacked bar chart.","date":"2025-04-08T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/blog/tags/how-to"},{"inline":true,"label":"vega-lite","permalink":"/blog/tags/vega-lite"}],"readingTime":14.46,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"How-To: The Stacked Bar Alternative","description":"Using Vega-Lite to replicate a more readable alternative to a stacked bar chart.","slug":"stacked-bar-alternative","authors":["daniel"],"tags":["how-to","vega-lite"],"image":"/img/blog/2025-04-08-stacked-bar/finished-recipe.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"New AppSource Sample Workbook","permalink":"/blog/sample-workbook-update"},"nextItem":{"title":"Deneb Annual Round-Up","permalink":"/blog/2024-2025-summary"}},"content":"import { VegaLite } from \\"react-vega\\";\\n\\nI\'ve become smitten with this stacked bar chart alternative, as [recently showcased on the Flerlage Twins blog](https://www.flerlagetwins.com/2025/04/the-best-alternative-to-stacked-bar.html). This article is a brilliant insight into a collaborative process between [Sebastine Amede](https://www.linkedin.com/in/sebastine-amede/), [Darragh Murray](https://www.linkedin.com/in/darraghmurray/) and [Kevin](https://www.linkedin.com/in/kevin-flerlage-20106a8), with a further spotlight on folks who have inspired their final design. It\'s a really brilliant way of keeping the part-to-whole idea of a stacked bar chart, while also making the individual segments much easier to compare.\\n\\nAs always, when I see cool things (and because I enjoy using the tooling as well as developing it), I wonder how easy they might be to replicate in Power BI using Deneb. I thought it would be a fun exercise to try and replicate the example from the blog post using Vega-Lite. Fortunately, Vega-Lite has multiple encoding channels along each direction for Cartesian plots, which makes it a fairly straightforward process.\\n\\n{/* truncate */}\\n\\n## Finished Recipe\\n\\nThis is how our final design will look:\\n\\n![finished-recipe](/img/blog/2025-04-08-stacked-bar/finished-recipe.png \\"An alternative to a stacked bar chart, first grouping the data by one dimension (Country) and then by another (Segment). Country has a bar representing the total sales, and Segment has a bar representing the total sales for each segment. The segments are then displayed as a separate bar chart within the bar for each country. Segment is color-coded and show in the legend. Each bar has labels showing the total sales represented by each mark. The consolidated bar representing country also has a label showing which country the mark is representing.\\")\\n\\nAlthough Deneb is a Power BI-specific tool, I\'ll produce the example using Vega-Lite natively, so we can visualize our progress on this post using embedded Vega-Lite visuals that you can open in the Vega Editor to further explore and/or remix. There may be some steps to make modifications if you have a preference for using Deneb-specific features like integrating your [Power BI theme](/docs/schemes) or [Power BI-specific number formatting](/docs/formatting), but they should be fairly straightforward.\\n\\nFor those who just want to get started with the finished product, there are assets available [at the bottom of this article](#wrapping-up).\\n\\n## Our Data\\n\\nI\'m going to start with the simple financial data that [you can download from MS Learn](https://learn.microsoft.com/en-us/power-bi/create-reports/sample-financial-download). For this example, I\'m adding the **Country** and **Segment** columns, and the **$ Sales** measure, so we have a lower-level granularity than we might normally have for a simple bar chart:\\n\\n| Country                  | Segment          | Sales     |\\n| ------------------------ | ---------------- | --------- |\\n| Canada                   | Channel Partners | 19752468  |\\n| Canada                   | Enterprise       | 144752736 |\\n| Canada                   | Government       | 428829833 |\\n| Canada                   | Midmarket        | 21616940  |\\n| Canada                   | Small Business   | 361203792 |\\n| France                   | Channel Partners | 15178124  |\\n| France                   | Enterprise       | 150182723 |\\n| France                   | Government       | 432792397 |\\n| France                   | Midmarket        | 25395919  |\\n| France                   | Small Business   | 274034856 |\\n| Germany                  | Channel Partners | 9807620   |\\n| Germany                  | Enterprise       | 146362549 |\\n| Germany                  | Government       | 307773485 |\\n| Germany                  | Midmarket        | 12452545  |\\n| Germany                  | Small Business   | 281729079 |\\n| Mexico                   | Channel Partners | 8887825   |\\n| Mexico                   | Enterprise       | 130960356 |\\n| Mexico                   | Government       | 413892255 |\\n| Mexico                   | Midmarket        | 16428775  |\\n| Mexico                   | Small Business   | 308830851 |\\n| United States of America | Channel Partners | 12059458  |\\n| United States of America | Enterprise       | 166894624 |\\n| United States of America | Government       | 362146299 |\\n| United States of America | Midmarket        | 21890524  |\\n| United States of America | Small Business   | 463176030 |\\n\\nThis produces the dataset for our Deneb visual and I\'ll add this to the **Values** data role, as I would for any project.\\n\\n## Thinking About Our Design\\n\\nWhile the finished recipe contains `text` marks to further annotate our chart, the solution itself can be approached at a high level as follows:\\n\\n1. Adding our highest-level grouping field (Country) to the `x` encoding channel and aggregating our measure (Sales) using `sum`.\\n2. Adding our lower-level grouping field (Segment) to the `xOffset` encoding channel.\\n\\nEverything else will work within these constraints.\\n\\n## Step 1: Highest Level Grouping\\n\\nHere\'s how we produce a summarized bar chart for our highest-level grouping (Country):\\n\\n```json\\n{\\n  \\"data\\": { \\"name\\": \\"dataset\\" },\\n  \\"layer\\": [\\n    {\\n      \\"encoding\\": { \\"y\\": { \\"field\\": \\"Sales\\", \\"aggregate\\": \\"sum\\" } },\\n      \\"mark\\": { \\"type\\": \\"bar\\", \\"color\\": \\"#d4d4d4\\" }\\n    }\\n  ],\\n  \\"encoding\\": {\\n    \\"x\\": {\\n      \\"field\\": \\"Country\\",\\n      \\"sort\\": { \\"field\\": \\"Sales\\", \\"op\\": \\"sum\\", \\"order\\": \\"descending\\" }\\n    },\\n    \\"y\\": { \\"type\\": \\"quantitative\\" }\\n  }\\n}\\n```\\n\\n- Note that I\'m already thinking about the above approach by using a `layer` rather than a `mark` at the top level..\\n- As our `y` encoding channel is `quantitative`, I\'m putting that at the top level, and adding a `y` encoding channel by an aggregate of **Sales** in the layer (due to granularity). This will inherit the top-level `type` and we won\'t need to repeat this, due to how Vega-Lite will union the y-scale.\\n- The `x` encoding channel will be shared by all layers, so this is at the top level. I\'m also sorting this in descending order of **Sales** (again aggregated).\\n\\nOur design looks pretty normal right now, but as we might expect:\\n\\n<VegaLite\\n  spec={{\\n    $schema: \\"https://vega.github.io/schema/vega-lite/v6.json\\",\\n    datasets: {\\n      dataset: [\\n        { Country: \\"Canada\\", Segment: \\"Channel Partners\\", Sales: 19752468 },\\n        { Country: \\"Canada\\", Segment: \\"Enterprise\\", Sales: 144752736 },\\n        { Country: \\"Canada\\", Segment: \\"Government\\", Sales: 428829833 },\\n        { Country: \\"Canada\\", Segment: \\"Midmarket\\", Sales: 21616940 },\\n        { Country: \\"Canada\\", Segment: \\"Small Business\\", Sales: 361203792 },\\n        { Country: \\"France\\", Segment: \\"Channel Partners\\", Sales: 15178124 },\\n        { Country: \\"France\\", Segment: \\"Enterprise\\", Sales: 150182723 },\\n        { Country: \\"France\\", Segment: \\"Government\\", Sales: 432792397 },\\n        { Country: \\"France\\", Segment: \\"Midmarket\\", Sales: 25395919 },\\n        { Country: \\"France\\", Segment: \\"Small Business\\", Sales: 274034856 },\\n        { Country: \\"Germany\\", Segment: \\"Channel Partners\\", Sales: 9807620 },\\n        { Country: \\"Germany\\", Segment: \\"Enterprise\\", Sales: 146362549 },\\n        { Country: \\"Germany\\", Segment: \\"Government\\", Sales: 307773485 },\\n        { Country: \\"Germany\\", Segment: \\"Midmarket\\", Sales: 12452545 },\\n        { Country: \\"Germany\\", Segment: \\"Small Business\\", Sales: 281729079 },\\n        { Country: \\"Mexico\\", Segment: \\"Channel Partners\\", Sales: 8887825 },\\n        { Country: \\"Mexico\\", Segment: \\"Enterprise\\", Sales: 130960356 },\\n        { Country: \\"Mexico\\", Segment: \\"Government\\", Sales: 413892255 },\\n        { Country: \\"Mexico\\", Segment: \\"Midmarket\\", Sales: 16428775 },\\n        { Country: \\"Mexico\\", Segment: \\"Small Business\\", Sales: 308830851 },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Channel Partners\\",\\n          Sales: 12059458,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Enterprise\\",\\n          Sales: 166894624,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Government\\",\\n          Sales: 362146299,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Midmarket\\",\\n          Sales: 21890524,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Small Business\\",\\n          Sales: 463176030,\\n        },\\n      ],\\n    },\\n    width: 580,\\n    height: 360,\\n    data: { name: \\"dataset\\" },\\n    layer: [\\n      {\\n        encoding: { y: { field: \\"Sales\\", aggregate: \\"sum\\" } },\\n        mark: { type: \\"bar\\", color: \\"#d4d4d4\\" },\\n      },\\n    ],\\n    encoding: {\\n      x: {\\n        field: \\"Country\\",\\n        sort: { field: \\"Sales\\", op: \\"sum\\", order: \\"descending\\" },\\n      },\\n      y: { type: \\"quantitative\\" },\\n    },\\n  }}\\n/>\\n\\n## Step 2: Lowest Level Grouping\\n\\nWith our primary channels (`x` and `y`) worked out, we can add our second layer, which will perform the offset within each bar, based on the **Segment** field:\\n\\n```json\\n{\\n  \\"data\\": { \\"name\\": \\"dataset\\" },\\n  \\"layer\\": [\\n    ... // Our first layer\\n    {\\n      \\"encoding\\": {\\n        \\"y\\": { \\"field\\": \\"Sales\\" },\\n        \\"xOffset\\": {\\n          \\"field\\": \\"Segment\\",\\n          \\"sort\\": { \\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" },\\n          \\"scale\\": { \\"padding\\": 0.2 }\\n        },\\n        \\"color\\": {\\n          \\"field\\": \\"Segment\\",\\n          \\"sort\\": {\\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" }\\n        }\\n      },\\n      \\"mark\\": { \\"type\\": \\"bar\\", \\"stroke\\": \\"white\\" }\\n    }\\n  ],\\n  \\"encoding\\": {\\n    ... // Our original encoding\\n  }\\n}\\n```\\n\\n- This layer has the `y` encoding channel set the the **Sales** field.\\n- Because we\'re at our lowest level of granularity, we don\'t need to aggregate this.\\n- The `xOffset` channel is set to the **Segment** field, and we\'re sorting this in descending order of **Sales**. This will produce individual bars within each bigger bar, sharing the top-level `x` encoding channel for their corresponding **Country**. Theres a small amount of `padding` here, to help space them out a bit better.\\n- The `color` channel is set to the **Segment** field, which will also give us our legend. This is sorted in descending order of sales, to match the ordering of the `xOffset` channel and having each legend item match the order of the segments in the chart.\\n- Each bar has a white `stroke`, just to help with contrast against the bar behind it.\\n\\nAs this point, we should be able to see that the main challenge has been solved and we have our \\"bars within bars\\" design:\\n\\n<VegaLite\\n  spec={{\\n    $schema: \\"https://vega.github.io/schema/vega-lite/v6.json\\",\\n    datasets: {\\n      dataset: [\\n        { Country: \\"Canada\\", Segment: \\"Channel Partners\\", Sales: 19752468 },\\n        { Country: \\"Canada\\", Segment: \\"Enterprise\\", Sales: 144752736 },\\n        { Country: \\"Canada\\", Segment: \\"Government\\", Sales: 428829833 },\\n        { Country: \\"Canada\\", Segment: \\"Midmarket\\", Sales: 21616940 },\\n        { Country: \\"Canada\\", Segment: \\"Small Business\\", Sales: 361203792 },\\n        { Country: \\"France\\", Segment: \\"Channel Partners\\", Sales: 15178124 },\\n        { Country: \\"France\\", Segment: \\"Enterprise\\", Sales: 150182723 },\\n        { Country: \\"France\\", Segment: \\"Government\\", Sales: 432792397 },\\n        { Country: \\"France\\", Segment: \\"Midmarket\\", Sales: 25395919 },\\n        { Country: \\"France\\", Segment: \\"Small Business\\", Sales: 274034856 },\\n        { Country: \\"Germany\\", Segment: \\"Channel Partners\\", Sales: 9807620 },\\n        { Country: \\"Germany\\", Segment: \\"Enterprise\\", Sales: 146362549 },\\n        { Country: \\"Germany\\", Segment: \\"Government\\", Sales: 307773485 },\\n        { Country: \\"Germany\\", Segment: \\"Midmarket\\", Sales: 12452545 },\\n        { Country: \\"Germany\\", Segment: \\"Small Business\\", Sales: 281729079 },\\n        { Country: \\"Mexico\\", Segment: \\"Channel Partners\\", Sales: 8887825 },\\n        { Country: \\"Mexico\\", Segment: \\"Enterprise\\", Sales: 130960356 },\\n        { Country: \\"Mexico\\", Segment: \\"Government\\", Sales: 413892255 },\\n        { Country: \\"Mexico\\", Segment: \\"Midmarket\\", Sales: 16428775 },\\n        { Country: \\"Mexico\\", Segment: \\"Small Business\\", Sales: 308830851 },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Channel Partners\\",\\n          Sales: 12059458,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Enterprise\\",\\n          Sales: 166894624,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Government\\",\\n          Sales: 362146299,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Midmarket\\",\\n          Sales: 21890524,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Small Business\\",\\n          Sales: 463176030,\\n        },\\n      ],\\n    },\\n    width: 580,\\n    height: 360,\\n    data: { name: \\"dataset\\" },\\n    layer: [\\n      {\\n        encoding: { y: { field: \\"Sales\\", aggregate: \\"sum\\" } },\\n        mark: { type: \\"bar\\", color: \\"#d4d4d4\\" },\\n      },\\n      {\\n        encoding: {\\n          y: { field: \\"Sales\\" },\\n          xOffset: {\\n            field: \\"Segment\\",\\n            sort: { field: \\"Sales\\", order: \\"descending\\" },\\n            scale: { padding: 0.2 },\\n          },\\n          color: {\\n            field: \\"Segment\\",\\n            sort: { field: \\"Sales\\", order: \\"descending\\" },\\n          },\\n        },\\n        mark: { type: \\"bar\\", stroke: \\"white\\" },\\n      },\\n    ],\\n    encoding: {\\n      x: {\\n        field: \\"Country\\",\\n        sort: { field: \\"Sales\\", op: \\"sum\\", order: \\"descending\\" },\\n      },\\n      y: { type: \\"quantitative\\" },\\n    },\\n  }}\\n/>\\n\\n## Step 3: Cleaning Up the Plot Area\\n\\nFor a more clutter-free design, we will need to remove the redundant elements from our chart. We will add labels in step 4, but this will help us to understand how much space we have to work with.\\n\\n```json highlight={2-3,21,31,33}\\n{\\n  \\"title\\": { \\"text\\": \\"Country Revenue by Segment ($M)\\", \\"anchor\\": \\"start\\" },\\n  \\"view\\": { \\"stroke\\": \\"transparent\\" },\\n  \\"data\\": { \\"name\\": \\"dataset\\" },\\n  \\"layer\\": [\\n    {\\n      \\"encoding\\": { \\"y\\": { \\"field\\": \\"Sales\\", \\"aggregate\\": \\"sum\\" } },\\n      \\"mark\\": { \\"type\\": \\"bar\\", \\"color\\": \\"#d4d4d4\\" }\\n    },\\n    {\\n      \\"encoding\\": {\\n        \\"y\\": { \\"field\\": \\"Sales\\" },\\n        \\"xOffset\\": {\\n          \\"field\\": \\"Segment\\",\\n          \\"sort\\": { \\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" },\\n          \\"scale\\": { \\"padding\\": 0.2 }\\n        },\\n        \\"color\\": {\\n          \\"field\\": \\"Segment\\",\\n          \\"sort\\": { \\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" },\\n          \\"legend\\": { \\"orient\\": \\"top\\", \\"title\\": null }\\n        }\\n      },\\n      \\"mark\\": { \\"type\\": \\"bar\\", \\"stroke\\": \\"white\\" }\\n    }\\n  ],\\n  \\"encoding\\": {\\n    \\"x\\": {\\n      \\"field\\": \\"Country\\",\\n      \\"sort\\": { \\"field\\": \\"Sales\\", \\"op\\": \\"sum\\", \\"order\\": \\"descending\\" },\\n      \\"axis\\": null\\n    },\\n    \\"y\\": { \\"type\\": \\"quantitative\\", \\"axis\\": null }\\n  }\\n}\\n```\\n\\nThe changes have been highlighted in the code above but can be summarized as:\\n\\n- Adding a title and anchoring it to the left (start).\\n- Setting the `view` to have a transparent stroke, so we don\'t have a border around the plot area.\\n- Setting the `legend` for the **Segment** field to be at the top, and removing the title (as it is redundant).\\n- Removing both axes (setting them to `null`), as they are not needed.\\n\\nHere is our refined design:\\n\\n<VegaLite\\n  spec={{\\n    $schema: \\"https://vega.github.io/schema/vega-lite/v6.json\\",\\n    datasets: {\\n      dataset: [\\n        { Country: \\"Canada\\", Segment: \\"Channel Partners\\", Sales: 19752468 },\\n        { Country: \\"Canada\\", Segment: \\"Enterprise\\", Sales: 144752736 },\\n        { Country: \\"Canada\\", Segment: \\"Government\\", Sales: 428829833 },\\n        { Country: \\"Canada\\", Segment: \\"Midmarket\\", Sales: 21616940 },\\n        { Country: \\"Canada\\", Segment: \\"Small Business\\", Sales: 361203792 },\\n        { Country: \\"France\\", Segment: \\"Channel Partners\\", Sales: 15178124 },\\n        { Country: \\"France\\", Segment: \\"Enterprise\\", Sales: 150182723 },\\n        { Country: \\"France\\", Segment: \\"Government\\", Sales: 432792397 },\\n        { Country: \\"France\\", Segment: \\"Midmarket\\", Sales: 25395919 },\\n        { Country: \\"France\\", Segment: \\"Small Business\\", Sales: 274034856 },\\n        { Country: \\"Germany\\", Segment: \\"Channel Partners\\", Sales: 9807620 },\\n        { Country: \\"Germany\\", Segment: \\"Enterprise\\", Sales: 146362549 },\\n        { Country: \\"Germany\\", Segment: \\"Government\\", Sales: 307773485 },\\n        { Country: \\"Germany\\", Segment: \\"Midmarket\\", Sales: 12452545 },\\n        { Country: \\"Germany\\", Segment: \\"Small Business\\", Sales: 281729079 },\\n        { Country: \\"Mexico\\", Segment: \\"Channel Partners\\", Sales: 8887825 },\\n        { Country: \\"Mexico\\", Segment: \\"Enterprise\\", Sales: 130960356 },\\n        { Country: \\"Mexico\\", Segment: \\"Government\\", Sales: 413892255 },\\n        { Country: \\"Mexico\\", Segment: \\"Midmarket\\", Sales: 16428775 },\\n        { Country: \\"Mexico\\", Segment: \\"Small Business\\", Sales: 308830851 },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Channel Partners\\",\\n          Sales: 12059458,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Enterprise\\",\\n          Sales: 166894624,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Government\\",\\n          Sales: 362146299,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Midmarket\\",\\n          Sales: 21890524,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Small Business\\",\\n          Sales: 463176030,\\n        },\\n      ],\\n    },\\n    width: 580,\\n    height: 360,\\n    title: {\\n      text: \\"Country Revenue by Segment ($M)\\",\\n      anchor: \\"start\\",\\n    },\\n    view: { stroke: \\"transparent\\" },\\n    data: { name: \\"dataset\\" },\\n    layer: [\\n      {\\n        encoding: { y: { field: \\"Sales\\", aggregate: \\"sum\\" } },\\n        mark: { type: \\"bar\\", color: \\"#d4d4d4\\" },\\n      },\\n      {\\n        encoding: {\\n          y: { field: \\"Sales\\" },\\n          xOffset: {\\n            field: \\"Segment\\",\\n            sort: { field: \\"Sales\\", order: \\"descending\\" },\\n            scale: { padding: 0.2 },\\n          },\\n          color: {\\n            field: \\"Segment\\",\\n            sort: { field: \\"Sales\\", order: \\"descending\\" },\\n            legend: { orient: \\"top\\" },\\n          },\\n        },\\n        mark: { type: \\"bar\\", stroke: \\"white\\" },\\n      },\\n    ],\\n    encoding: {\\n      x: {\\n        field: \\"Country\\",\\n        sort: { field: \\"Sales\\", op: \\"sum\\", order: \\"descending\\" },\\n        axis: null,\\n      },\\n      y: { type: \\"quantitative\\", axis: null },\\n    },\\n  }}\\n/>\\n\\n## Step 4: Labels\\n\\nFor the last part of this walkthrough, I\'m going to add labels for each bar using `text` marks. As our two-layer approach works well, we can use descendant layers so that these marks inherit what they need from the existing layout:\\n\\n```json highlight={5,9-21,32-47}\\n{\\n  \\"title\\": { \\"text\\": \\"Country Revenue by Segment ($M)\\", \\"anchor\\": \\"start\\" },\\n  \\"view\\": { \\"stroke\\": \\"transparent\\" },\\n  \\"data\\": { \\"name\\": \\"dataset\\" },\\n  \\"transform\\": [{ \\"calculate\\": \\"datum.Sales / 1000000\\", \\"as\\": \\"Sales_M\\" }],\\n  \\"layer\\": [\\n    {\\n      \\"encoding\\": { \\"y\\": { \\"field\\": \\"Sales\\", \\"aggregate\\": \\"sum\\" } },\\n      \\"layer\\": [\\n        { \\"mark\\": { \\"type\\": \\"bar\\", \\"color\\": \\"#d4d4d4\\" } },\\n        {\\n          \\"mark\\": { \\"type\\": \\"text\\", \\"baseline\\": \\"bottom\\", \\"dy\\": -15 },\\n          \\"encoding\\": { \\"text\\": { \\"field\\": \\"Country\\" } }\\n        },\\n        {\\n          \\"mark\\": { \\"type\\": \\"text\\", \\"baseline\\": \\"top\\", \\"dy\\": -15 },\\n          \\"encoding\\": {\\n            \\"text\\": { \\"field\\": \\"Sales_M\\", \\"aggregate\\": \\"sum\\", \\"format\\": \\",d\\" }\\n          }\\n        }\\n      ]\\n    },\\n    {\\n      \\"encoding\\": {\\n        \\"y\\": { \\"field\\": \\"Sales\\" },\\n        \\"xOffset\\": {\\n          \\"field\\": \\"Segment\\",\\n          \\"sort\\": { \\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" },\\n          \\"scale\\": { \\"padding\\": 0.2 }\\n        }\\n      },\\n      \\"layer\\": [\\n        {\\n          \\"mark\\": { \\"type\\": \\"bar\\", \\"stroke\\": \\"white\\" },\\n          \\"encoding\\": {\\n            \\"color\\": {\\n              \\"field\\": \\"Segment\\",\\n              \\"sort\\": { \\"field\\": \\"Sales\\", \\"order\\": \\"descending\\" },\\n              \\"legend\\": { \\"orient\\": \\"top\\", \\"title\\": null }\\n            }\\n          }\\n        },\\n        {\\n          \\"mark\\": { \\"type\\": \\"text\\", \\"dy\\": -7.5 },\\n          \\"encoding\\": { \\"text\\": { \\"field\\": \\"Sales_M\\", \\"format\\": \\",d\\" } }\\n        }\\n      ]\\n    }\\n  ],\\n  \\"encoding\\": {\\n    \\"x\\": {\\n      \\"field\\": \\"Country\\",\\n      \\"sort\\": { \\"field\\": \\"Sales\\", \\"op\\": \\"sum\\", \\"order\\": \\"descending\\" },\\n      \\"axis\\": null\\n    },\\n    \\"y\\": { \\"type\\": \\"quantitative\\", \\"axis\\": null }\\n  }\\n}\\n```\\n\\nI\'ve again highlighted the lines that have changed, but an overview of what I\'ve done is as follows:\\n\\n- Added a `transform` to calculate the **Sales** measure in millions, and store it in a new field called **Sales_M**. This is used for the labels. We could do this using Power BI formatting against the **Sales** measure, but I\'m trying to keep things replicable in Vega-Lite outside Power BI for this example.\\n- Created a sub-layer in the first layer, for three marks:\\n\\n  - Our original `bar` mark, which is the grey bar for the **Country** field.\\n  - A `text` mark for the **Country** field, offset by `dy` by -15 pixels (upwards).\\n  - A `text` mark for the (aggregated) **Sales_M** field, offset by `dy` -by 15 pixels (upwards).\\n\\n  Both `text` marks have opposing `baseline` properties, so while they share the same `y` position and `offset`, they will be positioned above and below their resolved y-position accordingly.\\n\\n- The second layer has a similar approach to the first, where we create a sub-layer for two marks:\\n\\n  - The `bar` mark, which is the colored bar for the **Segment** field. We have also moved the `color` encoding for the layer into this sub-layer, so that the `text` marks do not inherit it.\\n  - A `text` mark for the **Sales_M** field, offset by `dy` by -7.5 pixels (upwards).\\n\\nAnd now we have a visual that looks like what we intended:\\n\\n<VegaLite\\n  spec={{\\n    $schema: \\"https://vega.github.io/schema/vega-lite/v6.json\\",\\n    datasets: {\\n      dataset: [\\n        { Country: \\"Canada\\", Segment: \\"Channel Partners\\", Sales: 19752468 },\\n        { Country: \\"Canada\\", Segment: \\"Enterprise\\", Sales: 144752736 },\\n        { Country: \\"Canada\\", Segment: \\"Government\\", Sales: 428829833 },\\n        { Country: \\"Canada\\", Segment: \\"Midmarket\\", Sales: 21616940 },\\n        { Country: \\"Canada\\", Segment: \\"Small Business\\", Sales: 361203792 },\\n        { Country: \\"France\\", Segment: \\"Channel Partners\\", Sales: 15178124 },\\n        { Country: \\"France\\", Segment: \\"Enterprise\\", Sales: 150182723 },\\n        { Country: \\"France\\", Segment: \\"Government\\", Sales: 432792397 },\\n        { Country: \\"France\\", Segment: \\"Midmarket\\", Sales: 25395919 },\\n        { Country: \\"France\\", Segment: \\"Small Business\\", Sales: 274034856 },\\n        { Country: \\"Germany\\", Segment: \\"Channel Partners\\", Sales: 9807620 },\\n        { Country: \\"Germany\\", Segment: \\"Enterprise\\", Sales: 146362549 },\\n        { Country: \\"Germany\\", Segment: \\"Government\\", Sales: 307773485 },\\n        { Country: \\"Germany\\", Segment: \\"Midmarket\\", Sales: 12452545 },\\n        { Country: \\"Germany\\", Segment: \\"Small Business\\", Sales: 281729079 },\\n        { Country: \\"Mexico\\", Segment: \\"Channel Partners\\", Sales: 8887825 },\\n        { Country: \\"Mexico\\", Segment: \\"Enterprise\\", Sales: 130960356 },\\n        { Country: \\"Mexico\\", Segment: \\"Government\\", Sales: 413892255 },\\n        { Country: \\"Mexico\\", Segment: \\"Midmarket\\", Sales: 16428775 },\\n        { Country: \\"Mexico\\", Segment: \\"Small Business\\", Sales: 308830851 },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Channel Partners\\",\\n          Sales: 12059458,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Enterprise\\",\\n          Sales: 166894624,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Government\\",\\n          Sales: 362146299,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Midmarket\\",\\n          Sales: 21890524,\\n        },\\n        {\\n          Country: \\"United States of America\\",\\n          Segment: \\"Small Business\\",\\n          Sales: 463176030,\\n        },\\n      ],\\n    },\\n    width: 580,\\n    height: 360,\\n    title: { text: \\"Country Revenue by Segment ($M)\\", anchor: \\"start\\" },\\n    view: { stroke: \\"transparent\\" },\\n    data: { name: \\"dataset\\" },\\n    transform: [{ calculate: \\"datum.Sales / 1000000\\", as: \\"Sales_M\\" }],\\n    layer: [\\n      {\\n        encoding: { y: { field: \\"Sales\\", aggregate: \\"sum\\" } },\\n        layer: [\\n          { mark: { type: \\"bar\\", color: \\"#d4d4d4\\" } },\\n          {\\n            mark: { type: \\"text\\", baseline: \\"bottom\\", dy: -15 },\\n            encoding: { text: { field: \\"Country\\" } },\\n          },\\n          {\\n            mark: { type: \\"text\\", baseline: \\"top\\", dy: -15 },\\n            encoding: {\\n              text: { field: \\"Sales_M\\", aggregate: \\"sum\\", format: \\",d\\" },\\n            },\\n          },\\n        ],\\n      },\\n      {\\n        encoding: {\\n          y: { field: \\"Sales\\" },\\n          xOffset: {\\n            field: \\"Segment\\",\\n            sort: { field: \\"Sales\\", order: \\"descending\\" },\\n            scale: { padding: 0.2 },\\n          },\\n        },\\n        layer: [\\n          {\\n            mark: { type: \\"bar\\", stroke: \\"white\\" },\\n            encoding: {\\n              color: {\\n                field: \\"Segment\\",\\n                sort: { field: \\"Sales\\", order: \\"descending\\" },\\n                legend: { orient: \\"top\\", title: null },\\n              },\\n            },\\n          },\\n          {\\n            mark: { type: \\"text\\", dy: -7.5 },\\n            encoding: { text: { field: \\"Sales_M\\", format: \\",d\\" } },\\n          },\\n        ],\\n      },\\n    ],\\n    encoding: {\\n      x: {\\n        field: \\"Country\\",\\n        sort: { field: \\"Sales\\", op: \\"sum\\", order: \\"descending\\" },\\n        axis: null,\\n      },\\n      y: { type: \\"quantitative\\", axis: null },\\n    },\\n  }}\\n/>\\n\\n## Wrapping Up\\n\\nI\'m really grateful for Sebastine, Darragh and Kevin for taking the time to write up such a wonderful study on this approach and sharing their techniques with the data visualization community, and I hope that this implementation does that some justice, and help folks to implement this design in other tools. Hopefully anyone reading may have learned a little bit more about what Vega-Lite can do (and how Deneb can help you to achieve similar results in Power BI).\\n\\nAs promised, here are some links to the finished recipe:\\n\\n- [Power BI workbook (with visual)](/pbix/blog/2025-04-08-stacked-bar/Deneb%20-%20Stacked%20Bar%20Alternative.pbix)\\n- [Deneb template](/template/blog/2025-04-08-stacked-bar/Stacked%20Bar%20Chart%20Alternative.deneb.json)\\n- [Version in Vega Editor](https://vega.github.io/editor/#/url/vega-lite/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykBaADZ04JAGyUAVhDYA7EABoQAEySYkEOJghpQq9ZsxoA2qADCbBrMwAnAJ5oQZpLKSrFIAMrkEca47MYF1k4QQACAAUkG0wQmx0lTyRBOB1UAEYATgB2AFYAJgAWMQAOAF8Fc0trewCXNxREnz8jdABRazgbHBsaTQ8klLT0wsK8-OyAZjEKqqtbB3RnV3cmsl9-dABxNlIbWQ2jROTUtEL8kpL8zJLJydmnaoW6lcavZs2QAFkaZWQbADWWgGJzS+XSYghmUKAAYHhZ5rUlvVVu91i1HJ5kIJwgAhBgQGghCAJLygtDTdL5GGTbKZfLwp5IkAAMRsLigcAGH1aTiCshC4SiMTipMGpwyuXS2RKVMKjMRi1Z7NknO56M+HUwXR6fS5xyGaHSuRh6Su2Xy90qj0VjjZHP1aMOjh2ewOGINEsKkwm9MmOQVNSV9tVju8Gt5Pz+0SBRzJhtQ+Vy-tymSygee6BDarWzvQWOSeIJRNSYvJieysMmhRKuRm1oRQZdXWQsgcuYxS35gsi0ViXTLCZuMOyYmpGeZWxbLnbTs7IC1Ot6-U9w2K0yThUyE6VU5srdn4bzIFdXXd-lXFJH2SmNdyO+b+5n6uPUf+sZBCblBVyhXvDaZXdpzbF95wLHEwnxQliUHCULmla4R23ADbXQL44AADxoKA2FAz5AmCUJexFAdPwlS4ShlJMHzQzDsNwjtNU6bplzDct0kmGFMjEGk6xo746JwvDeVPfZnUvVBCg4kp6STf85ibWisKExjI1+d9gQkiFzkovJ+PQ5SGLnT5wKLaDSzItJOMuaypX4gBVWQRGUMJPHUbUIDCNgADMwgAQV8XooDeI95wIgUiOFft4kso1qVTP9yhQxSQEc5zXPc1IvN8gKumwkKeUcRcWL1WKMjEUpoTHeVkszVKnO1Fy3LULKfP8wL8uEl1djPcT4wlDcRjHTJkIUuq0sajKWs8trcqCgqI0cN8Y00-qwTNTIYQKGqxuZCa4CazKZpyjrgq6-NsTMksSTK9dpR4ziygAXQqEAAHdfnoNBchKGElHgGgyCwCkeKUTA6BSXQQG1DDeUbBYwgAJTgUhZAYOAwiYOxXJ5MIAAowC+ABKDwORgNgbEcCB1BiEBXuIGg4DeqHqZsNggUcWwXAgHBogxV79BQVBQFcXxHEFww6bBlUIG8imEBMUBgsEKAGEEFrxbUBgEEocVPIIMJ0hhY2TdJtI1oAfS+OmnqUdW7C6RWQD8HDlCJMgocWUBvMZwRlExcklCQMgyBsPhtSp7W6de+3HdQUwQHfKHMDsHAuXQJhog8HDBApxwAGJlEKIui+j60k+F6HU-T6HMLjTPNGEEJHCYNhsDYBWlGURZ+GNV6XbYN3ZA9yuYdab3ff9pZAOjh4K9AFO085uuPAb0IS05tgcA8bu0F7-9ndVQf3eTlfK590Ip8t62g5DsOKAj9AICjpQ5afXkFH9spv5e60B6HkeoAvYgAvn7AOhpXoYQAPLeW8pLc+k9MSFSUDIWmCDL7gNOEoCmyg44qFSJyWQACpYgGgCcKGvNlDENQDCSgDJv52yQA7Sm8dQDzyrkvDOWcUG2HZjXN6MARAkP-ifSuOc87oLAfmZBpCKbjxAYg-MgcQA4Lwbg6AfhiEx3IJoqGFNGafEwFvDw4NMCQ1QGjHE38GFsJjMnauy9YY7x7tkSgB8RHD1Pk4yRV89ZWw8G-ZAH8v4-2ekoDxgCQAYShqAq+8NagoLkTExRa0PDGKfi-FRNhcEsPwRoohJ9XpICwmkSxghXrAMXjXAAjgwFwpi1A0FIKTEpaAynWKAA)\\n\\nThanks as always for reading!\\n\\nDM-P"},{"id":"2024-2025-summary","metadata":{"permalink":"/blog/2024-2025-summary","source":"@site/blog/2025-03-23-2024-2025-stats.mdx","title":"Deneb Annual Round-Up","description":"Here\'s an update on what\'s happening with Deneb.","date":"2025-03-23T00:00:00.000Z","tags":[{"inline":true,"label":"usage","permalink":"/blog/tags/usage"},{"inline":true,"label":"news","permalink":"/blog/tags/news"}],"readingTime":9.86,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb Annual Round-Up","description":"Here\'s an update on what\'s happening with Deneb.","slug":"2024-2025-summary","authors":["daniel"],"tags":["usage","news"],"image":"/img/blog/blog-header-roundup-2024-2025.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"How-To: The Stacked Bar Alternative","permalink":"/blog/stacked-bar-alternative"},"nextItem":{"title":"Deneb 1.7.2 Standalone Available (and submitted to AppSource)","permalink":"/blog/1-7-2-submission"}},"content":"import { VegaLite } from \'react-vega\'\\n\\nIt\'s a wonderful time of the year when I look over community contributions for my membership in the Microsoft MVP program. As some of this includes looking at how Deneb is doing, I thought it\'d also be a good time to provide an update on Deneb\'s usage and a few bits about what\'s been happening lately.\\n\\n{/* truncate */}\\n\\n## Looking Back\\n\\nWhen I started figuring out whether Deneb would be possible or feasible, it was probably mid-2020. Once some things had been proven, things started to ramp up in late 2020, with us starting the public preview in April 2021. By September, we\'d made the AppSource submission, [with certification being achieved in November 2021](https://coacervo.co/deneb_nov_2021).\\n\\nI couldn\'t realistically determine whether building visuals with a tool like Deneb would be acceptable to folks. I\'ve long been a fan of the Vega and Vega-Lite languages, and bringing them into Power BI was always a question of how well received they might be - the languages are powerful, but they aren\'t the \\"Power BI way\\" of doing things. However, it solved real problems for me, so I\'ve been more than happy to make it a thing and keep maintaining it.\\n\\nDeneb was (and is) intended as a free and open-source visual with community support. I\'ve been clear from the beginning that community adoption and collaboration are needed for any long-term viability. We had some great people out of the gate who \\"got it\\" and were happy to share what they were learning and could achieve, which was fantastic to see. Many of these examples are still available (and being added to by their authors) via the [community page](/community/resources) if you want to check them out and show these folks some love and appreciation. I\'m eternally grateful for their continued support. And many thanks as ever to our [community experts](/support#community-experts) who volunteer to be contacted for questions, allowing me to focus on development and maintenance, as well as communities like [r/PowerBI](https://www.reddit.com/r/PowerBI/) and the [Fabric Community forums](https://community.fabric.microsoft.com/), where many of you have shared your experiences and examples, or make others aware of Deneb as a solution.\\n\\n## Where We\'ve Come to (Usage-Wise)\\n\\nBut back to that viability thing. This time last year, I was reviewing Deneb\'s usage for the (MVP) year and was blown away to see that we had around **~75,000 downloads** by developers over **~10,000 organizations**. These are downloads to reports by authors; unfortunately, it\'s impossible to know how many end users are seeing and using these visuals as part of their analytics platform as Deneb is a certified visual (meaning that we can\'t do telemetry to find this stuff out). Everything I know about usage is what people have been gracious enough to tell me about, whether it\'s sharing examples, recommendations to others that I happen to come across, or through reviews on AppSource ([28 5-star reviews and climbing](https://appsource.microsoft.com/en-us/product/power-bi-visuals/coacervolimited1596856650797.deneb)!) \\n\\nSo, when it came to doing the same review this year, I thought it would be great if we could sustain the same rate of downloads over the year, but we kind of smashed that. As of writing, we got nearly **113,000** downloads from over **16,000** organizations, an increase of **~48%** over the previous review period \uD83C\uDF89\\n\\n<div align=\\"center\\">\\n  <VegaLite spec={{\\n    \\"$schema\\": \\"https://vega.github.io/schema/vega-lite/v5.json\\",\\n    config: {\\n      font: \\"Segoe UI, wf_segoe-ui_normal, helvetica, arial, sans-serif\\",\\n      view: {\\n        stroke: \\"transparent\\"\\n      },\\n      axis: {\\n        ticks: false,\\n        title: null,\\n        labelPadding: 10,\\n        domain: false,\\n        labelAngle: 0,\\n      },\\n      title: {\\n        anchor: \\"start\\",\\n        align: \\"left\\",\\n        offset: 20,\\n        dx: 70\\n      },\\n      area: {\\n        fill: \\"#ab3280\\",\\n        fillOpacity: 0.2,\\n      },\\n      line: {\\n        color: \\"#ab3280\\",\\n        strokeWidth: 3\\n      },\\n      point: {\\n        filled: true,\\n        fillOpacity: 1,\\n        size: 100,\\n      },\\n      style: {\\n        data_point: {\\n          color: \\"#ab3280\\",\\n          stroke: \\"white\\",\\n          strokeWidth: 2\\n        },\\n        dash_rule: {\\n          color: \\"#9d9594\\",\\n          strokeWidth: 1,\\n          strokeDash: [4,2],\\n        },\\n        measure_rule: {\\n          color: \\"#ab3280\\",\\n          strokeWidth: 1,\\n        },\\n        arrow_rule: {\\n          color: \\"#9dc79d\\",\\n          strokeWidth: 3,\\n        },\\n        arrow_point: {\\n          color: \\"#9dc79d\\",\\n        }\\n      }\\n    },\\n    data: {\\n      values: [\\n        {year: \\"2023-2024\\", count: 75000, approx: \\"~75k\\"},\\n        {year: \\"2024-2025\\", count: 113000, approx: \\"~113k\\"},\\n      ]\\n    },\\n    title: {\\n      text: \\"Deneb downloads by review period\\",\\n      subtitle: \\"From April to March each year\\",\\n    },\\n    spacing: 10,\\n    width: 350,\\n    height: 200,\\n    layer: [\\n      {\\n        mark: {\\n          type: \\"area\\",\\n          line: true\\n        },\\n      },\\n      {\\n        transform: [\\n          { filter: \\"datum.year === \'2023-2024\'\\" },\\n        ],\\n        mark: {\\n          type: \\"text\\",\\n          yOffset: -12,\\n          text: {\\n            expr: \\"datum.approx\\"\\n          }\\n        },\\n      },\\n      {\\n        transform: [\\n          { filter: \\"datum.year === \'2024-2025\'\\" },\\n        ],\\n        mark: {\\n          type: \\"text\\",\\n          yOffset: -12,\\n          text: {\\n            expr: \\"datum.approx\\"\\n          }\\n        },\\n      },\\n      {\\n        data: { values: [{\\n          x1: \\"2023-2024\\",\\n          x2: \\"2024-2025\\",\\n          y1: 75000,\\n          y2: 113000\\n        }] },\\n        layer: [\\n          {\\n            mark: {\\n              type: \\"rule\\",\\n              style: \\"dash_rule\\",\\n            },\\n            encoding: {\\n              y: {\\n                field: \\"y1\\",\\n              },\\n              y2: {\\n                field: \\"y1\\"\\n              },\\n              x : {\\n                field: \\"x1\\",\\n              },\\n              x2: {\\n                value: { \\"expr\\": \\"width - 60\\"}\\n              }\\n            }\\n          },\\n          {\\n            mark: {\\n              type: \\"rule\\",\\n              style: \\"measure_rule\\",\\n            },\\n            encoding: {\\n              y: {\\n                field: \\"y2\\",\\n              },\\n              y2: {\\n                field: \\"y2\\"\\n              },\\n              x : {\\n                field: \\"x2\\",\\n              },\\n              x2: {\\n                value: { \\"expr\\": \\"width - 60\\"}\\n              }\\n            }\\n          },\\n          {\\n            mark: {\\n              type: \\"rule\\",\\n              style: \\"arrow_rule\\",\\n              y2Offset: 4,\\n            },\\n            encoding: {\\n              y: {\\n                field: \\"y1\\",\\n              },\\n              y2: {\\n                field: \\"y2\\"\\n              },\\n              x : {\\n                value: { \\"expr\\": \\"width - 60\\"}\\n              },\\n              x2: {\\n                value: { \\"expr\\": \\"width - 60\\"}\\n              }\\n            }\\n          },\\n          {\\n            mark: {\\n              type: \\"point\\",\\n              style: \\"arrow_point\\",\\n              shape: \\"triangle-up\\",\\n              yOffset: 4,\\n            },\\n            encoding: {\\n              y: {\\n                field: \\"y2\\",\\n              },\\n              x : {\\n                value: { \\"expr\\": \\"width - 60\\"}\\n              },\\n            }\\n          }\\n        ]\\n      },\\n      {\\n        mark: {\\n          type: \\"point\\",\\n          style: \\"data_point\\",\\n        }\\n      },\\n      {\\n        data: {\\n          values: [\\n            {y: 94000, diff: \\"+48%\\"},\\n          ]\\n        },\\n        mark: {\\n          type: \\"text\\",\\n        },\\n        encoding: {\\n          y: {\\n            field: \\"y\\",\\n          },\\n          x: {\\n            value: { \\"expr\\": \\"width - 40\\"}\\n          },\\n          text: {\\n            field: \\"diff\\"\\n          }\\n        }\\n      }\\n    ],\\n    encoding: {\\n      x: {\\n        field: \\"year\\",\\n        type: \\"ordinal\\",\\n      },\\n      y: {\\n        field: \\"count\\",\\n        type: \\"quantitative\\",\\n        axis: null\\n      }\\n    }\\n  }} \\n  actions={false}\\n  renderer=\'svg\'\\n  />\\n</div>\\n\\nThis is great for free and open-source data visualization and continued adoption for the Vega ecosystem within Power BI. It\'s also fantastic news that Vega projects have recently been [included in the projects sponsored by NumFOCUS](https://bsky.app/profile/vega-vis.bsky.social/post/3lkqhrlro6c2y), and new releases of each language are coming soon!\\n\\nVersion 1.7 of Deneb (released last year) is very close to my original vision for getting things working in Power BI at the start of my journey. However, we\'ve learned a lot since then, and our users have had great ideas [via our GitHub repo\'s issue tracker](https://github.com/deneb-viz/deneb/issues). \\n\\nSome of these have been delivered. Some are possible but not easy to achieve using the current architecture, and some are great feature ideas but won\'t be possible due to limitations with the custom visual ecosystem, which is managed and maintained by Microsoft. I have been incredibly unlucky in getting anything done here, but I will continue to lobby the team for whatever I can get, and if things ever change, maybe we can unlock some of these features.\\n\\nSince then, we\'ve also had features and tools appear in Power BI, like [field parameters](https://learn.microsoft.com/en-us/power-bi/create-reports/power-bi-field-parameters) and [PBIR](https://powerbi.microsoft.com/en-us/blog/power-bi-enhanced-report-format-pbir-in-power-bi-desktop-developer-mode-preview/), which extend the functionality of visuals and the source control capabilities of reports accordingly. The \\"v1\\" Deneb template format (a Vega or Vega-Lite spec and some basic metadata) is simplistic and it\'s challenging to extend via the visual properties system without significant burden. If folks are keen to start doing things with PBIR and Deneb, it\'s not intuitive under this current paradigm.\\n\\n## So, What\'s Next?\\n\\nI want Deneb to be around for many, many more years and to continue to be a free and open-source visual for the community. However, for this to work, we need a better platform to build upon. Therefore, I\'ve been planning, proofing, and developing for the last 6 months on what the future looks like. If I can keep the current work rate up, I\'ll have more solid details (and demonstrable features) in a few months and an ETA for when this version will start to become more visible. \\n\\nBut here are some things that you can rely upon in terms of what to know going forward at this stage:\\n\\n#### Deneb 1.x\\n\\n* The current v1 Deneb will remain in AppSource and certified in perpetuity, so your visuals and reports will continue to work. \\n* I\'ll keep this up to date regarding bugs, security, and custom visual API updates to make it as future-proof as possible for the current feature set.\\n* I\'ll keep the Vega and Vega-Lite languages as current as possible for each of the current \\"v5\\" releases. If future major versions of the languages affect backward compatibility, these will be frozen as of v5.\\n* The status quo will remain regarding v1 being free and open-source, with community (MIT) support.\\n\\n#### Deneb 2.x\\n\\n:::note First things first\\nWith the last bullet point for v1, I may have subconsciously primed you for some expectations around a major version with commercial changes. First, I\'ll nip that in the bud and say that Deneb \\"v2\\" is a major version change for architectural reasons; it\'s a complete re-write based on all the lessons learned. The Power BI visual will remain free, open-source (and MIT licensed).\\n:::\\n\\n* The largest change is that the property/persistence system that integrates with Power BI property storage will be very different, more centralized, and extensible for new features. It will have a dedicated JSON schema, allowing developers to validate changes outside of a report via PBIR.\\n* These changes mean that it will be a separate Power BI visual in AppSource with a different unique ID and will be certified. This also means that any visuals in your reports will remain v1 unless you replace them with the new visual.\\n* It\'s not going to be possible to swap a v1 visual to a v2 visual in place (like you might be able to do for some of the core visuals). We don\'t have low-level access to migrate properties over. As we want to significantly clean up the visual metadata, the older v1 properties to manage the state will be removed.\\n* The likely migration path will be to export the current visual as a v1 template, which you can import into a v2 visual. It\'ll handle the conversion for you, and you can pick up where you left off. I\'d also like this process to be available as an API for anyone wishing to migrate visuals using scripting and PBIR, but that will depend on complexity and free time (I will do my best to fit it in, though).\\n\\nIn terms of new features, the following are confirmed and more or less implemented in the current v2 builds:\\n\\n*\\tLinked data (`dataset`) will be applied to the Vega view via streaming rather than re-processing everything. The re-processing that v1 does causes a complete re-render, and this streaming approach prevents the view from resetting when canvas events (like cross-filtering) occur and should open up many more use cases for dynamic and actionable visuals.\\n*\\tField parameters will be supported by their name rather than by the internal column or measure they are impersonating. We\'ve had to get some changes provided by MS in conjunction with some significant architectural changes, but there will be a way of managing them ([original proposal here](https://github.com/deneb-viz/deneb/issues/238#issuecomment-2190392568), which is changing a bit but is fundamentally a good indicator of how they will be available to your dataset). If preferable, we\'ll also offically support the \'legacy\' method (where folks have worked around the limitations through creative semantic modeling) as much as we can.\\n*\\tThere will be support for drill-down. At the bare minimum, [it will be at the `dataset` level](https://github.com/deneb-viz/deneb/issues/196#issuecomment-1129309009) (operations from the visual header affecting the query against the visual).\\n*\\tPick and choose which support columns you need (e.g., formatting, cross-highlighting) rather than having everything in your dataset.\\n*\\tImprovement around the display and UX for bindable signals.\\n\\nAs mentioned above, there will be much more to include in this list as we progress. I hope that at least some of these will pique your interest for now.\\n\\nThanks once again to everyone for your continued support, and I\'m looking forward to the next year and beyond!\\n\\nAll the best,\\n\\nDM-P"},{"id":"1-7-2-submission","metadata":{"permalink":"/blog/1-7-2-submission","source":"@site/blog/2024-09-03-submission-1-7-2.md","title":"Deneb 1.7.2 Standalone Available (and submitted to AppSource)","description":"1.7.2 is a minor update that fixes initial issues observed in the 1.7 release. The standalone build is available now, and the AppSource version is currently undergoing certification.","date":"2024-09-03T00:00:00.000Z","tags":[{"inline":true,"label":"releases","permalink":"/blog/tags/releases"},{"inline":true,"label":"standalone","permalink":"/blog/tags/standalone"},{"inline":true,"label":"fixes","permalink":"/blog/tags/fixes"}],"readingTime":0.71,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb 1.7.2 Standalone Available (and submitted to AppSource)","description":"1.7.2 is a minor update that fixes initial issues observed in the 1.7 release. The standalone build is available now, and the AppSource version is currently undergoing certification.","slug":"1-7-2-submission","authors":["daniel"],"tags":["releases","standalone","fixes"],"image":"/img/blog/blog-header-submission-1-7-2.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Deneb Annual Round-Up","permalink":"/blog/2024-2025-summary"},"nextItem":{"title":"Deneb 1.7.1 Standalone Available (and submitted to AppSource)","permalink":"/blog/1-7-1-submission"}},"content":"1.7.2 is the next minor update that fixes initial issues observed in the 1.7 release. As usual, the standalone build is available now, and the AppSource version is currently undergoing certification.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n---\\r\\n\\r\\nWe\'ve had another couple of minor changes to make as a result of version 1.7, so a new minor version has been submitted to AppSource, to assist affected users. You can view what\'s included in the [Change Log](/docs/changelog).\\r\\n\\r\\nThe [standalone version](/docs/getting-started#standalone-version) has already been published for anyone who wants to take advantage of this. As usual, the AppSource version takes a little longer to go through the certification process, but we expect this to be available within the normal timeline of a few weeks. I will provide an update on its status as soon as I can.\\r\\n\\r\\nThanks, as always,\\r\\n\\r\\nDM-P"},{"id":"1-7-1-submission","metadata":{"permalink":"/blog/1-7-1-submission","source":"@site/blog/2024-08-05-submission-1-7-1.md","title":"Deneb 1.7.1 Standalone Available (and submitted to AppSource)","description":"1.7.1 is a minor update that fixes initial issues observed in the 1.7 release. The standalone build is available now, and the AppSource version is currently undergoing certification.","date":"2024-08-05T00:00:00.000Z","tags":[{"inline":true,"label":"releases","permalink":"/blog/tags/releases"},{"inline":true,"label":"standalone","permalink":"/blog/tags/standalone"},{"inline":true,"label":"fixes","permalink":"/blog/tags/fixes"}],"readingTime":0.98,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb 1.7.1 Standalone Available (and submitted to AppSource)","description":"1.7.1 is a minor update that fixes initial issues observed in the 1.7 release. The standalone build is available now, and the AppSource version is currently undergoing certification.","slug":"1-7-1-submission","authors":["daniel"],"tags":["releases","standalone","fixes"],"image":"/img/blog/blog-header-submission-1-7-1.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Deneb 1.7.2 Standalone Available (and submitted to AppSource)","permalink":"/blog/1-7-2-submission"},"nextItem":{"title":"Deneb 1.7 is AppSource Certified!","permalink":"/blog/1-7-certified"}},"content":"1.7.1 is a minor update that fixes initial issues observed in the 1.7 release. The standalone build is available now, and the AppSource version is currently undergoing certification.\\n\\n\x3c!-- truncate --\x3e\\n\\n---\\n\\nThe rollout of 1.7 seems to be going well, and thanks very much to you all for your fantastic feedback. It\'s great to hear how well you\'re progressing with the new changes!\\n\\nThanks also to those who found and reported some minor issues. You provided excellent reproduction details and helped immensely with testing and validating these fixes, meaning that we could resolve them really quickly.\\n\\nI\'ve taken the opportunity to incorporate some other quality-of-life improvements, plus an update to Vega-Lite, into this version 1.7.1. You can view what\'s included in the [Change Log](/docs/changelog).\\n\\nThe [standalone version](/docs/getting-started#standalone-version) has already been published for anyone who wants to take advantage of this. As usual, the AppSource version takes a little longer to go through the certification process, but we expect this to be available within the normal timeline of a few weeks. I will provide an update on its status as soon as I can.\\n\\nThanks, as always,\\n\\nDM-P"},{"id":"1-7-certified","metadata":{"permalink":"/blog/1-7-certified","source":"@site/blog/2024-07-11-certification-1-7.md","title":"Deneb 1.7 is AppSource Certified!","description":"It\'s a big day - Deneb 1.7 has passed certification! \uD83C\uDF89\uD83C\uDF89","date":"2024-07-11T00:00:00.000Z","tags":[{"inline":true,"label":"releases","permalink":"/blog/tags/releases"},{"inline":true,"label":"certification","permalink":"/blog/tags/certification"},{"inline":true,"label":"production","permalink":"/blog/tags/production"}],"readingTime":0.93,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb 1.7 is AppSource Certified!","description":"It\'s a big day - Deneb 1.7 has passed certification! \uD83C\uDF89\uD83C\uDF89","slug":"1-7-certified","authors":["daniel"],"tags":["releases","certification","production"],"image":"/img/blog/blog-header-certification-1-7.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Deneb 1.7.1 Standalone Available (and submitted to AppSource)","permalink":"/blog/1-7-1-submission"},"nextItem":{"title":"Deneb 1.7 Available for Beta Testing","permalink":"/blog/1-7-beta"}},"content":"It\'s a big day - Deneb 1.7 has passed certification! \uD83C\uDF89\uD83C\uDF89\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\nIt should take around two weeks for the new version to fully deploy to your reports. In the meantime, you can see the full list of changes in the [Change Log](/docs/changelog). This has also been made available for users of the standalone (non-AppSource) version, so you can [download it from GitHub](https://deneb.link/latest-release).\\r\\n\\r\\nTo help AppSource users with the wait, we\'ve recorded some short videos to help you get to know the new features and will be releasing a new one each day. The first feature we\'re showcasing is dark mode \uD83C\uDF19 But we\'ll add new videos to the playlist below, so keep checking or like and subscribe (if that\'s your thing) to stay current.\\r\\n\\r\\n  <iframe\\r\\n    width=\\"600\\"\\r\\n    height=\\"325\\"\\r\\n    src=\\"https://www.youtube.com/embed/videoseries?list=PLenEqp5HifcRASUPYL6Nj-a2YtfCBmjz6\\"\\r\\n    title=\\"YouTube video player\\"\\r\\n    frameborder=\\"0\\"\\r\\n    allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\"\\r\\n    allowfullscreen\\r\\n  ></iframe>\\r\\n\\r\\n---\\r\\n\\r\\nWe extend our heartfelt thanks to our community, especially our dedicated beta testers, for their invaluable contributions that led us to this momentous occasion!"},{"id":"1-7-beta","metadata":{"permalink":"/blog/1-7-beta","source":"@site/blog/2024-06-24-beta-testing-1-7.md","title":"Deneb 1.7 Available for Beta Testing","description":"Deneb 1.7 is a significant update, and we\'re excited to submit it to AppSource very soon! Before we do that, we\'re opening beta testing for the community so that we can ensure that the quality of the submitted version is as good as possible for all users.","date":"2024-06-24T00:00:00.000Z","tags":[{"inline":true,"label":"releases","permalink":"/blog/tags/releases"},{"inline":true,"label":"testing","permalink":"/blog/tags/testing"},{"inline":true,"label":"beta","permalink":"/blog/tags/beta"}],"readingTime":10.11,"hasTruncateMarker":true,"authors":[{"name":"Daniel Marsh-Patrick","title":"Program Manager & Developer","url":"https://github.com/dm-p","imageURL":"https://github.com/dm-p.png","key":"daniel","page":null}],"frontMatter":{"title":"Deneb 1.7 Available for Beta Testing","description":"Deneb 1.7 is a significant update, and we\'re excited to submit it to AppSource very soon! Before we do that, we\'re opening beta testing for the community so that we can ensure that the quality of the submitted version is as good as possible for all users.","slug":"1-7-beta","authors":["daniel"],"tags":["releases","testing","beta"],"image":"/img/blog/blog-header-beta-1-7.png","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Deneb 1.7 is AppSource Certified!","permalink":"/blog/1-7-certified"}},"content":"Deneb 1.7 is a significant update, and we\'re excited to submit it to AppSource very soon! Before we do that, we\'re opening beta testing for the community so that we can ensure that the quality of the submitted version is as good as possible for all users.\\r\\n\\r\\n\x3c!-- truncate --\x3e\\r\\n\\r\\n## Why Beta Testing?\\r\\n\\r\\nFor Deneb, this is a critical phase of development that we can\'t do without broader assistance. Here are a few important reasons why:\\r\\n\\r\\n- Deneb\'s user base has grown significantly since its launch, and in the last three months alone, we have had nearly **13,000** downloads by more than **6,500** developers. And there will be many more people than this experiencing the visuals these folks develop in their deployed Power BI reports.\\r\\n\\r\\n- Because Deneb is a certified visual, we can\'t monitor visual usage via telemetry for trust and privacy reasons. We only know about the kinds of use cases Deneb fulfills based on examples that people generously choose to share on social media channels or by a small portion who choose to make their templates available for others to use, or by those who help improve Deneb by reporting issues and making feature requests \uD83D\uDE4F\\r\\n\\r\\n- So, while we take great care to ensure that all functionality works as well as possible, we can only explore a limited number of use cases ourselves. We want to make sure that those out there who will be using Deneb in unique and innovative ways get a chance to make sure that their solutions will continue to work.\\r\\n\\r\\n- Once we submit a new version of Deneb to AppSource, **we\'re committed to the publication process**: if someone finds a bug, we may be able to fix it very quickly, but it can take anywhere between **3 and 5 weeks** for a visual update to go through the certification process and fully deploy to all reports. This can be a long time for people to wait.\\r\\n\\r\\n#### This is where your help is invaluable.\\r\\n\\r\\nIf you have some time to dedicate to validating your existing specifications and checking the functionality of the new features, you\'re going to be (a) getting to play with new features and validating that they\'re going to help elevate your reports and your productivity processes when using Deneb, and (b) ensuring that not just you and your stakeholders are going to have continuity of service when the update deploys, but we can be confident that our wider community will, too \uD83D\uDE00\\r\\n\\r\\n## What Changes Can I Expect?\\r\\n\\r\\nWe said that 1.7 is a big release, and we mean it! Here are the big-ticket items that may pique your interest further:\\r\\n\\r\\n- **Dark mode**\u2014you can now toggle between the traditional light theme and a darker one to reduce eye strain.\\r\\n\\r\\n  ![You can now set the theme to [Dark], to convert the editor into dark mode. This will display all components (except for the preview area) with darker colors.](/img/changelog/1.7.0/dark-theme-standard.png \\"You can now set the theme to [Dark], to convert the editor into dark mode. This will display all components (except for the preview area) with darker colors.\\")\\r\\n\\r\\n* **Commenting**\u2014you can now add comments to your JSON for documentation and debugging purposes.\\r\\n\\r\\n  ![JavaScript-style block (/* */) and line (//) comments are now valid in the JSON editor.](/img/changelog/1.7.0/json-comments.png \\"JavaScript-style block (/* */) and line (//) comments are now valid in the JSON editor.\\")\\r\\n\\r\\n* **Auto-completion improvements**\u2014suggestions will now be recommended based on the details in the Vega and Vega-Lite schemas.\\r\\n\\r\\n  ![Valid matching entries for language keywords are now available via auto-completion.](/img/changelog/1.7.0/auto-completion.png \\"Valid matching entries for language keywords are now available via auto-completion.\\")\\r\\n\\r\\n* **Inline language documentation** (for Vega-Lite)\u2014the documentation the Vega team makes available for Vega-Lite in its language schema is now available when you hover your mouse over an appropriate location in your JSON. This will help you discover more language features within Deneb itself, and any hyperlinks will navigate you to the correct location on the Vega-Lite documentation site for further reading.\\r\\n\\r\\n  ![Hovering your mouse over language keywords (in Vega-Lite) will display any relevant documentation.](/img/changelog/1.7.0/doc-on-hover.png \\"Hovering your mouse over language keywords (in Vega-Lite) will display any relevant documentation.\\")\\r\\n\\r\\n* **Clearer JSON error and warning indications**\u2014any parsing issues are better highlighted closer to their location in the JSON editor.\\r\\n\\r\\n  ![The position of errors and warnings is now better highlighted, so that you can track down JSON parsing issues more quickly.](/img/changelog/1.7.0/json-editor-highlighting.png \\"The position of errors and warnings is now better highlighted, so that you can track down JSON parsing issues more quickly.\\")\\r\\n\\r\\n* **Improved JSON editor state preservation**\u2014Deneb will track the state of anything you\'ve done in the JSON editor to make your specification easier to navigate, such as code folding, for the current editing session. This will include when you exit and re-enter the advanced editor (provided you don\'t leave the current report page).\\r\\n\\r\\n* **Auto unit formatting**\u2014a new format type that applies the same logic as Power BI format numbers in K, M, Bn, etc., with less effort than the existing Power BI value formatter.\\r\\n\\r\\n* **Advanced cross-filtering** (for Vega)\u2014new expression functions to help generate cross-filtering of report items based on a filter against the original dataset sent to Deneb before any transformations may have been applied.\\r\\n\\r\\n* Improved tracking of dataset field allocation within JSON for dataset changes and templating purposes.\\r\\n\\r\\n* New signals that track the visual container scroll position.\\r\\n\\r\\n* Many performance enhancements and bug fixes.\\r\\n\\r\\nCheck the [Change Log](/docs/next/changelog) for a more complete list and links to more detailed documentation.\\r\\n\\r\\n## How Can I Help?\\r\\n\\r\\nAs mentioned above, there are two key things we need to ensure:\\r\\n\\r\\n#### 1. Everything you\'ve already made continues to work.\\r\\n\\r\\nThis is perhaps the most straightforward thing you can do, but it\'s the most important. Even if you do the following bare-minimum tests and everything looks good, this is incredibly helpful in validating things:\\r\\n\\r\\n- Update a Deneb visual to the latest version and ensure it continues working as expected for your users.\\r\\n\\r\\n- Update a Deneb visual to the latest version and ensure it continues working as you expect as a developer.\\r\\n\\r\\n#### 2. The new features work as you expect them to.\\r\\n\\r\\nAgain, we try to cover as much as possible ahead of time, but beta testing helps us confirm that the features and fixes we\'re implementing cover your use cases. You might even find use cases we didn\'t think of that can make Deneb even better in the long run or might possibly cause some unintended side effects in the shorter term.\\r\\n\\r\\nWith anything that comes up here, we can decide if a feature needs additional tweaks before submission (if it\'s simple), or we might learn that a feature isn\'t ready for all users. This is, again, all valuable feedback that is best to know before we begin the submission and certification process.\\r\\n\\r\\n## How Can I Download And Use the Beta Release?\\r\\n\\r\\n:::warning Use a copy of any production reports!\\r\\nIf you are testing a production report, it is strongly suggested that you save a copy of your workbook and work with that for testing purposes before converting a visual over to a beta build instance. This means that you don\u2019t have to worry about reverting your existing production visual back to 1.6 and losing any functionality that may be present in 1.7.\\r\\n:::\\r\\n\\r\\nThe latest version is always published and available for download on our GitHub [repository\'s beta channel page](https://deneb.link/beta-build):\\r\\n\\r\\n- The visual (.pbiviz) file is available from the list of assets at the bottom, e.g.:\\r\\n\\r\\n  ![The GitHub repository contains a Beta Release page, where you can download the Power BI visual file (.pbiviz) for the latest beta version.](/img/blog/beta-download-page-github.png \\"The GitHub repository contains a Beta Release page, where you can download the Power BI visual file (.pbiviz) for the latest beta version.\\")\\r\\n\\r\\n* With the file downloaded, you can then [manually import it into your report](https://learn.microsoft.com/en-us/power-bi/developer/visuals/power-bi-custom-visuals?WT.mc_id=DP-MVP-5003712#custom-visual-files).\\r\\n\\r\\n* To begin testing, create a visual using the new beta version or change an existing one from the current AppSource version to the installed beta version.\\r\\n\\r\\n**Note that you should always exercise care when downloading and installing Power BI visual files from unknown/untrusted sources**. Any visuals published and made available from Deneb\'s GitHub repository will conform to Deneb\'s [privacy policy](/privacy-policy).\\r\\n\\r\\n## I Checked, and Something\'s Not Right. What Now?\\r\\n\\r\\nThe best thing you can do is let us know. Don\'t assume someone else has already found it and told us! We can manage duplicate issues if they occur, but it\'s always good to check to see if the [list of open issues](https://github.com/deneb-viz/deneb/issues) has what you\'re planning to tell us about.\\r\\n\\r\\nIf you find a bug \uD83D\uDC1Bor have an enhancement \uD83C\uDF1F you\'d like, you can [create an issue in our GitHub repository](https://github.com/deneb-viz/deneb/issues) if it does not exist or add your voice to an existing issue if it\'s there.\\r\\n\\r\\nBecause everyone\'s setup is always unique to them, a lot of the time we spend on bugs is spent understanding things that may be specific to the situation. Anything we can do to cut this time down means we can find and fix things faster. As such, the following information is always going to be helpful if you can provide it:\\r\\n\\r\\n- The version build (please [refer here](/community/early-access#providing-feedback-on-early-access-builds) to find out how to obtain this).\\r\\n\\r\\n- Prescribed steps to reproduce the issue.\\r\\n\\r\\n- Expected outcome.\\r\\n\\r\\n- Actual outcome.\\r\\n\\r\\n- Supporting screenshots or a short video.\\r\\n\\r\\n- Specification and/or sample workbook that can reproduce the issue.\\r\\n\\r\\nUnfortunately, .pbix files aren\u2019t a valid file type for attaching a workbook to your GitHub issue, but you can change the extension (e.g., to .zip), and this will work. In reproducing issues and sharing the above, **please use public or anonymized data**, as we cannot be held responsible for the data you share with us.\\r\\n\\r\\nIf you have a suggestion for improvement, it would be great if you could be as descriptive as possible about how you think this should work. Again, the following should help provide you with some ideas for helping me get on your wavelength:\\r\\n\\r\\n- User stories or short narratives.\\r\\n\\r\\n- Mockups (taking existing screenshots and annotating them is totally fine).\\r\\n\\r\\nNote that enhancements will likely not be candidates for implementation during the beta testing phase but will help us understand what you need from Deneb and help us improve things in future releases.\\r\\n\\r\\n## When Will Beta Testing Be Finished and Deneb Submitted to AppSource?\\r\\n\\r\\nWe want to get to AppSource as quickly as possible, but we want to be sure not to rush if things are not fully ready.\\r\\n\\r\\nThe timeline will depend on what is found. We are planning an initial two-week phase of validation, identifying key issues and triaging them, which is due to be completed on **Monday, July 8th**.\\r\\n\\r\\nIf no significant or blocking issues occur, we\'ll submit it as soon as possible after this date. If we have things to fix, we will issue a new beta release with a tighter time loop for feedback and continue this until we\'re ready to go. This should ideally be done and ready before the end of July. Assuming the normal AppSource submission and certification timelines apply, Deneb should be live in reports by the end of August.\\r\\n\\r\\n## Thank You\\r\\n\\r\\nWe say this a lot, but we rely incredibly on the Power BI and Deneb community to help promote, test, and support Deneb so everyone can benefit. We\'re also so fortunate that the Vega development team continues to support and update Vega and Vega-Lite, which provide a fantastic set of tools for bespoke data visualization. Without these people and their commitment to the community, we would not be where we are today. \uD83D\uDE4F\\r\\n\\r\\nWe look forward to bringing 1.7 to a Power BI near you soon!"}]}}')}}]);