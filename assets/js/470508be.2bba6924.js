"use strict";(self.webpackChunkdeneb_doc=self.webpackChunkdeneb_doc||[]).push([[1492],{95300:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=r(85893),t=r(11151);const a={id:"pattern-fills",title:"Pattern Fills",description:"Understanding how to work with pattern fills in Deneb",slug:"/pattern-fills"},s="Pattern Fills",l={id:"deeper-concepts/pattern-fills",title:"Pattern Fills",description:"Understanding how to work with pattern fills in Deneb",source:"@site/docs/deeper-concepts/pattern-fills.md",sourceDirName:"deeper-concepts",slug:"/pattern-fills",permalink:"/next/pattern-fills",draft:!1,unlisted:!1,editUrl:"https://github.com/deneb-viz/deneb-viz.github.io/edit/source/docs/deeper-concepts/pattern-fills.md",tags:[],version:"current",frontMatter:{id:"pattern-fills",title:"Pattern Fills",description:"Understanding how to work with pattern fills in Deneb",slug:"/pattern-fills"},sidebar:"mainSidebar",previous:{title:"Theme Colors and Schemes",permalink:"/next/schemes"},next:{title:"Templates",permalink:"/next/templates"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Default Patterns",id:"default-patterns",level:2},{value:"Backgrounds",id:"backgrounds",level:3},{value:"Intensity Modifier",id:"intensity-modifier",level:3},{value:"Available Patterns",id:"available-patterns",level:3},{value:"Dynamic Variations",id:"dynamic-variations",level:2},{value:"The <code>pbiPatternSVG</code> Expression Function",id:"the-pbipatternsvg-expression-function",level:3},{value:"Simple Example - Mark Properties",id:"simple-example---mark-properties",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"pattern-fills",children:"Pattern Fills"}),"\n",(0,i.jsx)(n.admonition,{title:"Pattern fills are not a Vega feature",type:"caution",children:(0,i.jsx)(n.p,{children:"They are only supported for the SVG renderer and will not work for Canvas. Please bear these points in mind if looking to port a specification elsewhere."})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["There are a range of SVG fill patterns available wherever a ",(0,i.jsx)(n.code,{children:"color"}),", ",(0,i.jsx)(n.code,{children:"stroke"})," or ",(0,i.jsx)(n.code,{children:"fill"})," can be used in a mark's property. These are based on ",(0,i.jsx)(n.a,{href:"https://iros.github.io/patternfills/",children:"the excellent work of Irene Ros"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Because SVG patterns have to be explicitly defined inside a web page, we can't add all possible combinations of colors and patterns without significant performance reduction. Therefore the functionality is split into two components:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default Patterns"}),": pre-defined monochrome patterns, which are a good starting point for many data visualization use cases."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dynamic Variations"}),": a custom expression function to generate variations of the default patterns with a specific foreground and/or background color."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"default-patterns",children:"Default Patterns"}),"\n",(0,i.jsx)(n.p,{children:"Default patterns are referenced using the following syntax:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"url(#[pattern name])\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For example, if we want to use the ",(0,i.jsx)(n.code,{children:"diagonal-stripe-1"})," pattern, we would refer to this as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"url(#diagonal-stripe-1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"So, instead of shading our example bar chart from the formatting page with a color, we could use this instead, e.g.:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{5} showLineNumbers",children:'{\r\n  "data": { "name": "dataset" },\r\n  "mark": {\r\n    "type": "bar",\r\n    "fill": "url(#diagonal-stripe-1)"\r\n  },\r\n  "encoding": {\r\n    "y": {\r\n      "field": "Country",\r\n      "type": "nominal"\r\n    },\r\n    "x": {\r\n      "field": "$ Sales",\r\n      "type": "quantitative"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"And instead of a solid fill, we would now get the following rendered visual:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"vega-lite-diagonal-stripe-1.png",src:r(45773).Z+"",title:"Simple bar chart using Financial sample dataset (with [$ Sales] as a measure). The measure axis displays raw values, with a maximum of 1,000,000,000. We have specified the &#39;diagonal-stripe-1&#39; pattern fill to fill the bars with a pattern instead of a solid color.",width:"558",height:"330"})}),"\n",(0,i.jsxs)(n.p,{children:["We could augment this with a ",(0,i.jsx)(n.code,{children:"stroke"})," to provide a boundary to the mark, e.g.:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"highlight={6} showLineNumbers",children:'{\r\n  "data": { "name": "dataset" },\r\n  "mark": {\r\n    "type": "bar",\r\n    "fill": "url(#diagonal-stripe-1)",\r\n    "stroke": "black"\r\n  },\r\n  "encoding": {\r\n    "y": {\r\n      "field": "Country",\r\n      "type": "nominal"\r\n    },\r\n    "x": {\r\n      "field": "$ Sales",\r\n      "type": "quantitative"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"vega-lite-diagonal-stripe-1-stroke.png",src:r(42453).Z+"",title:"We can add a stroke property to border a mark with a pattern fill.",width:"544",height:"333"})}),"\n",(0,i.jsx)(n.h3,{id:"backgrounds",children:"Backgrounds"}),"\n",(0,i.jsxs)(n.p,{children:["Default patterns have a transparent background, and this can be observed in the above example with the x-axis gridlines. If you want to provide a solid background, you can either use the ",(0,i.jsx)(n.a,{href:"#dynamic-variations",children:"dynamic pattern variation expression"}),", or layer a mark behind it with a solid fill, e.g.:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"highlight={3-10,16-17} showLineNumbers",children:'{\r\n  "data": { "name": "dataset" },\r\n  "layer": [\r\n    {\r\n      "mark": {\r\n        "type": "bar",\r\n        "fill": "white"\r\n      }\r\n    },\r\n    {\r\n      "mark": {\r\n        "type": "bar",\r\n        "fill": "url(#diagonal-stripe-1)",\r\n        "stroke": "black"\r\n      }\r\n    }\r\n  ],\r\n  "encoding": {\r\n    "y": {\r\n      "field": "Country",\r\n      "type": "nominal"\r\n    },\r\n    "x": {\r\n      "field": "$ Sales",\r\n      "type": "quantitative"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"vega-lite-diagonal-stripe-1-solid-layer.png",src:r(56019).Z+"",title:"Adding a layer and a mark with a solid fill behind our mark with a pattern fill can remove transparency.",width:"545",height:"323"})}),"\n",(0,i.jsx)(n.h3,{id:"intensity-modifier",children:"Intensity Modifier"}),"\n",(0,i.jsxs)(n.p,{children:["Default patterns also have a modifier suffix that can be added to reduce the intensity of the stroke from ",(0,i.jsx)(n.code,{children:"black (#000000)"})," to a softer color. These are in intervals of 10, from ",(0,i.jsx)(n.code,{children:"10"})," to ",(0,i.jsx)(n.code,{children:"90"}),", and also at the 1st and 3rd quartiles (",(0,i.jsx)(n.code,{children:"25"})," and ",(0,i.jsx)(n.code,{children:"75"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["So, for our above example, if we wish to reduce the stroke intensity down to 30%, we can use ",(0,i.jsx)(n.code,{children:"url(#diagonal-stripe-1-30)"}),", e.g.:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"highlight={13} showLineNumbers",children:'{\r\n  "data": { "name": "dataset" },\r\n  "layer": [\r\n    {\r\n      "mark": {\r\n        "type": "bar",\r\n        "fill": "white"\r\n      }\r\n    },\r\n    {\r\n      "mark": {\r\n        "type": "bar",\r\n        "fill": "url(#diagonal-stripe-1-30)",\r\n        "stroke": "black"\r\n      }\r\n    }\r\n  ],\r\n  "encoding": {\r\n    "y": {\r\n      "field": "Country",\r\n      "type": "nominal"\r\n    },\r\n    "x": {\r\n      "field": "$ Sales",\r\n      "type": "quantitative"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"vega-lite-diagonal-stripe-1-30.png",src:r(33204).Z+"",title:"Adding a &#39;-30&#39; suffix to the &#39;diagonal-stripe-1&#39; SVG URL will apply a stroke color of 30% intensity of black.",width:"541",height:"324"})}),"\n",(0,i.jsx)(n.h3,{id:"available-patterns",children:"Available Patterns"}),"\n",(0,i.jsx)(n.p,{children:"The following Power BI report shows all available pre-defined patterns and their SVG URL IDs."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You can hover over a pattern to get a tooltip showing its ID in a larger font, as well as how the SVG URL should look in order to apply it."}),"\n",(0,i.jsx)(n.li,{children:"The slicer at the bottom of the page can be used to observe the patterns at the specified intensity, and the SVG URL ID required to apply it."}),"\n"]}),"\n",(0,i.jsx)("iframe",{width:"100%",height:"486",src:"https://app.powerbi.com/view?r=eyJrIjoiMWY0NTdlYjQtYzVlZS00ZjJmLWExMGItNzIxNmYyMjk4ZjAxIiwidCI6IjUzYmJlMGQ3LTU0NzItNGQ0NS04NGY0LWJiNzJiYjFjMjI4OSJ9",frameborder:"0",allowFullScreen:"true"}),"\n",(0,i.jsx)(n.h2,{id:"dynamic-variations",children:"Dynamic Variations"}),"\n",(0,i.jsx)(n.p,{children:"If you wish to use more color in your patterns, then Deneb provides an expression function that you can use. This will dynamically generate and apply a variation of a default SVG pattern definition to the visual's DOM, and re-use them if necessary."}),"\n",(0,i.jsxs)(n.h3,{id:"the-pbipatternsvg-expression-function",children:["The ",(0,i.jsx)(n.code,{children:"pbiPatternSVG"})," Expression Function"]}),"\n",(0,i.jsx)(n.p,{children:"The function has the following syntax within a Vega or Vega-Lite expression ref:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pbiPatternSVG(pattern, foreground, background)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Where:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"pattern"})," is one of the pre-defined pattern IDs above, enclosed with single quotes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"#"})," used in the SVG URL should not be included here."]}),"\n",(0,i.jsxs)(n.li,{children:["If an unknown (or invalid) ",(0,i.jsx)(n.code,{children:"pattern"})," is provided, then this will result in no fill being applied."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"foreground"})," is a valid CSS color name or hex value, enclosed with single quotes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"foreground"})," is omitted (or ",(0,i.jsx)(n.code,{children:"null"}),"), Deneb will resolve this back to the value used by the default pattern (",(0,i.jsx)(n.code,{children:"black"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"transparent"})," is a permitted value, and this will effectively hide the pattern stroke from the reader."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"foreground"})," overrides the intensity modifier, if this is supplied in ",(0,i.jsx)(n.code,{children:"pattern"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"background"})," is a valid CSS color name or hex value, enclosed with single quotes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"background"})," is omitted, then Deneb will produce a transparent background for the generated pattern."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"simple-example---mark-properties",children:"Simple Example - Mark Properties"}),"\n",(0,i.jsxs)(n.p,{children:["If we wanted to apply a custom foreground and background, we could use ",(0,i.jsx)(n.code,{children:"pbiPatternSVG"})," in an expression function as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"highlight={5-7} showLineNumbers",children:'{\r\n  "data": { "name": "dataset" },\r\n  "mark": {\r\n    "type": "bar",\r\n    "fill": {\r\n      "expr": "pbiPatternSVG(\'diagonal-stripe-3\', \'#DA9A0F\', \'#333333\')"\r\n    },\r\n    "stroke": "black"\r\n  },\r\n  "encoding": {\r\n    "y": {\r\n      "field": "Country",\r\n      "type": "nominal"\r\n    },\r\n    "x": {\r\n      "field": "$ Sales",\r\n      "type": "quantitative"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"pbiPatternSVG-simple-fg-bg.png",src:r(92943).Z+"",title:"Using the &#39;pbiPatternSVG&#39; function with a foreground color of &#39;#DA9A0F&#39; and &#39;#333333&#39; to produce a diagonal stripe effect on our example bar chart.",width:"547",height:"321"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},92943:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/pbiPatternSVG-simple-fg-bg-97a43caab47b2ed77fabbb33970c4d0b.png"},33204:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/vega-lite-diagonal-stripe-1-30-5a5163337ab76d08849c93b048c6668e.png"},56019:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/vega-lite-diagonal-stripe-1-solid-layer-309a6405c5c65667f97f529ce6b79913.png"},42453:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/vega-lite-diagonal-stripe-1-stroke-cb038ba033601fa51c0df34e4a5d2fbe.png"},45773:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/vega-lite-diagonal-stripe-1-8e119801ca07424995d2f530e2246b11.png"},11151:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>s});var i=r(67294);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);