{
    "componentChunkName": "component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js",
    "path": "/formatting-values",
    "result": {"data":{"mdx":{"id":"1555bdf2-07d8-5c66-9dcf-9da8afc03059","excerpt":"Default Formatting Behavior When it comes to formatting values (if you're just using simple encodings), then Vega or Vega-Lite will use its own deterministicâ€¦","fields":{"slug":"/formatting-values/"},"frontmatter":{"title":"Formatting Values","description":"How to format values within Deneb","image":"/images/favicon.png","disableTableOfContents":false},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Formatting Values\",\n  \"description\": \"How to format values within Deneb\",\n  \"image\": \"/images/favicon.png\",\n  \"disableTableOfContents\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"default-formatting-behavior\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#default-formatting-behavior\",\n    \"aria-label\": \"default formatting behavior permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Default Formatting Behavior\"), mdx(\"p\", null, \"When it comes to formatting values (if you're just using simple encodings), then Vega or Vega-Lite will use its own deterministic behavior to figure out things like decimal precision or other elements.\"), mdx(\"p\", null, \"You can provide your own overrides to these wherever they are used. Both \", mdx(OutboundLink, {\n    href: \"https://vega.github.io/vega/docs/api/locale/\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"Vega\"), \" and \", mdx(OutboundLink, {\n    href: \"https://vega.github.io/vega-lite/docs/format.html\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"Vega-Lite\"), \" both use the D3 formatting convention for \", mdx(OutboundLink, {\n    href: \"https://github.com/d3/d3-format\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"numbers\"), \" or \", mdx(OutboundLink, {\n    href: \"https://github.com/d3/d3-time-format\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"date and time\"), \" values (incidentally, so does \", mdx(OutboundLink, {\n    href: \"https://charticulator.com/docs/user-interaction.html#text-formatting\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"Charticulator\"), \").\"), mdx(\"p\", null, \"Power BI \", mdx(OutboundLink, {\n    href: \"https://docs.microsoft.com/en-us/power-bi/create-reports/desktop-custom-format-strings?WT.mc_id=DP-MVP-5003712#supported-custom-format-syntax\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"has its own syntax\"), \", which is probably your preference for applying any customized formatting strings into a specification.\"), mdx(\"p\", null, \"To ensure correct compatibility with Vega and Vega-Lite, particularly if you're bringing examples in (or even looking to take them out!) Deneb will use the D3 convention by default, but there's some help at hand if that's not your preference.\"), mdx(\"h2\", {\n    \"id\": \"power-bi-custom-formatter-\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#power-bi-custom-formatter-\",\n    \"aria-label\": \"power bi custom formatter  permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Power BI Custom Formatter \", mdx(\"img\", {\n    parentName: \"h2\",\n    \"src\": \"https://img.shields.io/badge/-%E2%89%A5%200.2-lightgrey\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"If you prefer working with Power BI format strings, Deneb has a \", mdx(OutboundLink, {\n    href: \"https://vega.github.io/vega-lite/docs/config.html#custom-format-type\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \" custom format type\"), \" named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pbiFormat\"), \" that you can use in lieu of the D3 format convention.\"), mdx(\"h2\", {\n    \"id\": \"vega-lite-implementation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#vega-lite-implementation\",\n    \"aria-label\": \"vega lite implementation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Vega-Lite Implementation\"), mdx(\"p\", null, \"In Vega-Lite, we can specify \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"pbiFormat\\\"\"), \" as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"formatType\"), \" wherever you're specifying a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format\"), \".\"), mdx(\"h4\", {\n    \"id\": \"quantitative-axis-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#quantitative-axis-example\",\n    \"aria-label\": \"quantitative axis example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Quantitative Axis Example\"), mdx(\"p\", null, \"Let's say we have a simple bar chart that uses the Power BI financial sample dataset, which shows \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[$ Sales]\"), \" for each \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Country]\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"data\\\": {\\n        \\\"name\\\": \\\"dataset\\\"\\n    },\\n    \\\"mark\\\": {\\n        \\\"type\\\": \\\"bar\\\"\\n    },\\n    \\\"encoding\\\": {\\n        \\\"y\\\": {\\n            \\\"field\\\": \\\"Country\\\",\\n            \\\"type\\\": \\\"nominal\\\"\\n        },\\n        \\\"x\\\": {\\n            \\\"field\\\": \\\"$ Sales\\\",\\n            \\\"type\\\": \\\"quantitative\\\"\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"And this will result in the following output:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/formatting/vega-lite-default.png\",\n    \"alt\": \"vega-lite-default.png\",\n    \"title\": \"Simple bar chart using Financial sample dataset (with [$ Sales] as a measure). The measure axis displays raw values, with a maximum of 1,000,000,000.\"\n  })), mdx(\"p\", null, \"That's a lot of zeroes! What might be nicer is if his were a little easier to read. If we want to use a Power BI format string for this, we can modify the specification as follows to show values in $bn to one decimal place (changes highlighted):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\",\n    \"metastring\": \"highlight={8-11}\",\n    \"highlight\": \"{8-11}\"\n  }, \"{\\n  ...\\n  \\\"encoding\\\": {\\n    ...\\n    \\\"x\\\": {\\n      \\\"field\\\": \\\"$ Sales\\\",\\n      \\\"type\\\": \\\"quantitative\\\",\\n      \\\"axis\\\": {\\n        \\\"format\\\": \\\"$#0,,,.0bn\\\",\\n        \\\"formatType\\\": \\\"pbiFormat\\\"\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"This results in something a little more human-readable:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/formatting/vega-lite-billions.png\",\n    \"alt\": \"vega-lite-billions.png\",\n    \"title\": \"After applying a Power BI format string and specifying our custom formatter, the axis becomes much more human readable. This updates to shiw tick values as $bn, to one decimal place.\"\n  })), mdx(\"h4\", {\n    \"id\": \"quantitative--temporal-axes-example\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#quantitative--temporal-axes-example\",\n    \"aria-label\": \"quantitative  temporal axes example permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Quantitative & Temporal Axes Example\"), mdx(\"p\", null, \"If instead, we had a line chart using the same dataset, but this time we wanted to plot \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[$ Sales]\"), \" by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Date]\"), \" then we could express this as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json{\"\n  }, \"  \\\"data\\\": {\\n    \\\"name\\\": \\\"dataset\\\"\\n  },\\n  \\\"mark\\\": {\\n    \\\"type\\\": \\\"line\\\"\\n  },\\n  \\\"encoding\\\": {\\n    \\\"x\\\": {\\n      \\\"field\\\": \\\"Date\\\",\\n      \\\"type\\\": \\\"temporal\\\"\\n    },\\n    \\\"y\\\": {\\n      \\\"field\\\": \\\"$ Sales\\\",\\n      \\\"type\\\": \\\"quantitative\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"And here's how it looks out of the gate:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/formatting/vega-lite-line-default.png\",\n    \"alt\": \"vega-lite-line-default.png\",\n    \"title\": \"Simple line chart using Financial sample dataset (with [$ Sales] as a measure and [Date] along the x-axis). The measure axis displays raw values, with a maximum of just over 400,000,000.\"\n  })), mdx(\"p\", null, \"We could use a similar approach as above for both axes, to get them how we want (changes highlighted):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\",\n    \"metastring\": \"highlight={6-9,13-16}\",\n    \"highlight\": \"{6-9,13-16}\"\n  }, \"{\\n  ...\\n  \\\"encoding\\\": {\\n    \\\"x\\\": {\\n      ...\\n      \\\"axis\\\": {\\n        \\\"format\\\": \\\"MMM yyyy\\\",\\n        \\\"formatType\\\": \\\"pbiFormat\\\"\\n      }\\n    },\\n    \\\"y\\\": {\\n      ...\\n      \\\"axis\\\": {\\n        \\\"format\\\": \\\"$#0,,,.0bn\\\",\\n        \\\"formatType\\\": \\\"pbiFormat\\\"\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"And now, we have both axes formatted as we like:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/formatting/vega-lite-line-formatted.png\",\n    \"alt\": \"vega-lite-line-formatted.png\",\n    \"title\": \"After specifying format strings and the Power BI custom formatter for both axes, the specification updates as required.\"\n  })), mdx(\"h2\", {\n    \"id\": \"vega-implementation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#vega-implementation\",\n    \"aria-label\": \"vega implementation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Vega Implementation\"), mdx(\"p\", null, \"If using Vega, you'd call the custom formatter in lieu of the \", mdx(OutboundLink, {\n    href: \"https://vega.github.io/vega/docs/expressions/#format\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"format\"), \" expression, e.g. for an axis tick label:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\",\n    \"metastring\": \"highlight={10}\",\n    \"highlight\": \"{10}\"\n  }, \"{\\n  ...\\n  \\\"axes\\\": [\\n    {\\n      ...\\n      \\\"encode\\\": {\\n        \\\"labels\\\": {\\n          \\\"update\\\": {\\n            \\\"text\\\": {\\n              \\\"signal\\\": \\\"pbiFormat(datum.value, '$#0,,,.0bn')\\\"\\n            }\\n          }\\n        }\\n      }\\n    },\\n    ...\\n  ],\\n  ...\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"locale-awareness\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#locale-awareness\",\n    \"aria-label\": \"locale awareness permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Locale-Awareness\"), mdx(\"p\", null, \"If using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pbiFormat\"), \" formatter, Deneb currently will resolve your locale \", mdx(OutboundLink, {\n    href: \"https://docs.microsoft.com/en-us/power-bi/fundamentals/supported-languages-countries-regions?WT.mc_id=DP-MVP-5003712#choose-the-language-or-locale-of-power-bi-desktop\",\n    target: \"_blank\",\n    mdxType: \"OutboundLink\"\n  }, \"according to your Power BI configuration\"), \" for any values.\"), mdx(\"p\", null, \"For example, we can view the live chart example from above \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"en fran\\xE7ais\"), \" (fr-FR), and the formatting strings will work as expected:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/images/formatting/vega-lite-line-fr-FR.png\",\n    \"alt\": \"vega-lite-line-fr-FR.png\",\n    \"title\": \"If we are in a different locale, e.g. French, then our [$ Sales] and [Date] format string update to use locale-specific decimal separators and month naming.\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Default Formatting Behavior"},{"depth":2,"value":"Power BI Custom Formatter "},{"depth":2,"value":"Vega-Lite Implementation"},{"depth":4,"value":"Quantitative Axis Example"},{"depth":4,"value":"Quantitative & Temporal Axes Example"},{"depth":2,"value":"Vega Implementation"},{"depth":2,"value":"Locale-Awareness"}]}},"pageContext":{"slug":"/formatting-values/","prev":{"label":"Visual Editor","link":"/visual-editor"},"next":{"label":"Pattern Fills","link":"/pattern-fills"},"repositoryEditUrl":"https://github.com/deneb-viz/deneb-viz.github.io/tree/source/src/docs/formatting-values.mdx","repositoryProvider":"GitHub"}},
    "staticQueryHashes": ["1954253342","2328931024","2501019404","973074209"]}